{"total":49,"pageSize":12,"pageCount":5,"data":[{"title":"你好，欢迎到访团子的博客","uid":"b785373ff41b86c86fee988839b61307","slug":"你好，欢迎到访团子的博客 copy","date":"2022-12-02T04:39:41.997Z","updated":"2022-12-02T04:51:26.432Z","comments":true,"path":"api/articles/你好，欢迎到访团子的博客 copy.json","cover":"https://www.helloimg.com/images/2022/12/02/ZuwHWr.jpg","text":"一名在路上的WebGiser，记录学习之路 ","link":"","photos":[],"count_time":{"symbolsCount":22,"symbolsTime":"1 mins."},"categories":[{"name":"welcome","slug":"welcome","count":1,"path":"api/categories/welcome.json"}],"tags":[{"name":"hello","slug":"hello","count":2,"path":"api/tags/hello.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}},"feature":true},{"title":"MySQL","uid":"838ae74e3a76757d637de803a615bfd9","slug":"MySQL","date":"2022-12-01T13:13:57.870Z","updated":"2022-12-02T04:38:52.663Z","comments":true,"path":"api/articles/MySQL.json","cover":[],"text":"前言. 数据库1.数据库的意义 数据库就是存放数据的仓库 想像一下, 在没有计算机之前, 我们如何统计人口数据的, 通常都是用纸和笔登记, 填写像这样的一张表格. 再将这些表格按照一定的顺序整理 最后放到一个档案室里集中管理 这个档案室实际上就是一个存放数据的仓库. 但是这种管理...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"16 mins."},"categories":[{"name":"数据库","slug":"数据库","count":1,"path":"api/categories/数据库.json"}],"tags":[{"name":"sql","slug":"sql","count":3,"path":"api/tags/sql.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}},"feature":true},{"title":"javaScript高级","uid":"757df1fd86f1866fcfb8bc703ef31782","slug":"JavaScript高级","date":"2022-12-01T13:05:46.773Z","updated":"2022-12-02T04:38:58.555Z","comments":true,"path":"api/articles/JavaScript高级.json","cover":[],"text":"1 - 预编译概念1) 什么是预编译首先, 我们要知道Javascript是解释性语言 解释性: 逐行解析, 逐行执行 那么, 什么是预编译呢? 在Javascript真正被解析之前, js解析引擎会首先把整个文件进行预处理, 以消除一些歧义. 这个预处理的过程就被称为预编译 示...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"前端三剑客","slug":"前端三剑客","count":24,"path":"api/categories/前端三剑客.json"}],"tags":[{"name":"javascript","slug":"javascript","count":16,"path":"api/tags/javascript.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}},"feature":true},{"title":"33_Todo小项目完成","uid":"67fd54f357341c37b5e6f85e86c46aff","slug":"day33_课堂笔记","date":"2022-12-01T14:20:58.395Z","updated":"2022-12-02T04:26:20.316Z","comments":true,"path":"api/articles/day33_课堂笔记.json","cover":"https://www.helloimg.com/images/2022/12/02/ZuwHWr.jpg","text":"昨日回顾1,搭建基本环境 2,后台查询所有的功能 3,解决时间显示问题 4,抽取数据库配置信息单独放在一个文件中 5,异常处理 后台实现查询一个 对参数进行判断 新增 返回新增后的数据 先新增,然后拿到新增的id进行查询,将查询的数据返回 修改 跟之前一样,只需要修改内容 删除 ...","link":"","photos":[],"count_time":{"symbolsCount":645,"symbolsTime":"1 mins."},"categories":[{"name":"项目","slug":"项目","count":3,"path":"api/categories/项目.json"}],"tags":[{"name":"Todolist","slug":"Todolist","count":3,"path":"api/tags/Todolist.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}},{"title":"综合案例-Todo小项目","uid":"0fc374236e6bc7b1f82600ab48634b27","slug":"综合案例-Todo小项目","date":"2022-12-01T14:18:16.930Z","updated":"2022-12-01T14:19:42.727Z","comments":true,"path":"api/articles/综合案例-Todo小项目.json","cover":[],"text":"老板: 立项产品经理: 需求分析-&gt; 需求文档: 需求点(文字形式的描述) 原型图(图形的描述) UI设计师: 原型图 -&gt; 静态产品图技术经理: 技术分析 -&gt; 设计文档 流程图 数据库设计 接口设计 项目成员: 编码实现测试人员: 编码测试运维人员: 部署/...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"项目","slug":"项目","count":3,"path":"api/categories/项目.json"}],"tags":[{"name":"Todolist","slug":"Todolist","count":3,"path":"api/tags/Todolist.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}},{"title":"32_todolist项目练习及讲解","uid":"b455dd2018d164911d1cb5d5e588f15b","slug":"day32_课堂笔记","date":"2022-12-01T14:15:54.316Z","updated":"2022-12-01T14:18:46.345Z","comments":true,"path":"api/articles/day32_课堂笔记.json","cover":null,"text":"1,后端基本功能实现环境的搭建 1,生成api后端目录 2,安装额外的nodemon,mysql,cors包 3,集成nodemon,使用cors中间件 4,创建todos.js路由模块 5,导入数据库操作模块,编写具体的路由 增删改查基本功能 2,处理时间显示问题const c...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"项目","slug":"项目","count":3,"path":"api/categories/项目.json"}],"tags":[{"name":"Todolist","slug":"Todolist","count":3,"path":"api/tags/Todolist.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}},{"title":"31_用户管理系统前端增删改完成","uid":"106826aea6b9ab5ab35ab7da587e641c","slug":"day31_课堂笔记","date":"2022-12-01T14:14:07.773Z","updated":"2022-12-01T14:14:35.243Z","comments":true,"path":"api/articles/day31_课堂笔记.json","cover":null,"text":"昨日回顾1,将数据库操作的代码命名为index.js,放在db文件夹下.方便管理 2,脚手架的使用及项目环境搭建(项目代码生成器) 安装 创建项目名,express --no-view backEnd 生成后端目录 安装包(自带的包,mysql cors,nodemon) 更改启...","link":"","photos":[],"count_time":{"symbolsCount":870,"symbolsTime":"1 mins."},"categories":[{"name":"后端","slug":"后端","count":14,"path":"api/categories/后端.json"}],"tags":[{"name":"express","slug":"express","count":6,"path":"api/tags/express.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}},{"title":"Express框架应用-实现用户模块","uid":"5a9c51c782f6d4d77fd9a0571cb97c4f","slug":"Express框架应用-实现用户模块","date":"2022-12-01T14:09:41.043Z","updated":"2022-12-01T14:10:05.777Z","comments":true,"path":"api/articles/Express框架应用-实现用户模块.json","cover":[],"text":"一. 需求分析1 系统框架选择前后端分离的系统架构 2 具体的业务需求 有一个页面, 可以展示用户的列表 有一个页面, 可以添加用户信息 有一个页面, 可以修改用户信息 点击删除按钮, 可以删除用户信息 二. 技术方案1 数据库设计 用户表 (users) 字段名 类型 备注 i...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"后端","slug":"后端","count":14,"path":"api/categories/后端.json"}],"tags":[{"name":"express","slug":"express","count":6,"path":"api/tags/express.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}},{"title":"30_用户管理系统后台实现及前台查询所有","uid":"dec91e97c264ed31b95d6e5abfa5eeb8","slug":"day30_课堂笔记","date":"2022-12-01T14:07:10.846Z","updated":"2022-12-01T14:07:47.403Z","comments":true,"path":"api/articles/day30_课堂笔记.json","cover":null,"text":"昨日回顾改造了express后台的增删改查 一,使用数组实现 弊端 数据不能持久存储,只是在内存中存储 二,中间件优化 1,优化处理请求体 app.use(express.json()) app.use(express.urlencoded()) 2,处理跨域请求 app.use...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"后端","slug":"后端","count":14,"path":"api/categories/后端.json"}],"tags":[{"name":"express","slug":"express","count":6,"path":"api/tags/express.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}},{"title":"29_express集成数据库操作并封装","uid":"841af1c8d1a60dd62055f0a0655c6017","slug":"day29_课堂笔记","date":"2022-12-01T14:04:33.270Z","updated":"2022-12-01T14:05:06.520Z","comments":true,"path":"api/articles/day29_课堂笔记.json","cover":null,"text":"昨日回顾中间件 概念 业务处理中间环节.(一个处理函数) 规则 (req,res,next) next可以将调用关系流转到下一个函数 分类 按照作用范围 局部生效的中间件(某些访问路径,某个路由调用) 全局生效的中间件(所有访问路径,通过use调用) 按照级别来分 内置中间件 e...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"后端","slug":"后端","count":14,"path":"api/categories/后端.json"}],"tags":[{"name":"express","slug":"express","count":6,"path":"api/tags/express.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}},{"title":"restful","uid":"8a9733c9b1d5d35d078b2db4ec97b51b","slug":"restful","date":"2022-12-01T13:59:58.678Z","updated":"2022-12-02T03:13:03.905Z","comments":true,"path":"api/articles/restful.json","cover":[],"text":"一. 接口编程简介1 背景​ 随着互联网的发展, 尤其是移动互联为代表的Web3.0时代. 客户端层出不穷, 以APP、微信、PC浏览器为代表, 服务端业务逻辑是基本一致的. ​ 那么有没有一种方式可以做到”一次编写,随时接入”呢? 目前比较流行的方案就是”接口编程“ 2 什么是...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"后端","slug":"后端","count":14,"path":"api/categories/后端.json"}],"tags":[{"name":"restful","slug":"restful","count":1,"path":"api/tags/restful.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}},{"title":"Express","uid":"37a590a44a5ff61ad5ed7f48e2da3615","slug":"Express","date":"2022-12-01T13:58:51.651Z","updated":"2022-12-02T04:51:20.228Z","comments":true,"path":"api/articles/Express.json","cover":[],"text":"一. Express简介Express 是一个极简而灵活的 node.js Web应用框架, 提供了一系列强大特性帮助你创建各种 Web 应用，和丰富的 HTTP 工具。Express中文官网 为什么说Express是一个极简的框架 Express的核心只有两个部分 路由 中间件...","link":"","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[{"name":"后端","slug":"后端","count":14,"path":"api/categories/后端.json"}],"tags":[{"name":"express","slug":"express","count":6,"path":"api/tags/express.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}}]}