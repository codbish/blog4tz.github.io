{"title":"23_外键_多表关系_多表查询","uid":"037fa750d83c04acd7b65b954d7307d0","slug":"day23课程笔记","date":"2022-12-01T13:26:27.747Z","updated":"2022-12-01T13:49:24.227Z","comments":true,"path":"api/articles/day23课程笔记.json","keywords":null,"cover":null,"content":"<h4 id=\"昨日回顾\"><a href=\"#昨日回顾\" class=\"headerlink\" title=\"昨日回顾\"></a>昨日回顾</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">数据库概念\n\t存储数据的文件系统,通过标准的sql访问,方便对数据管理\n\t\n安装\n\tmysql\n\tNavicat\n\t\n应用\n\t一般一个项目创建一个数据库\n\t一个实体创建一张表\n\t一个对象的实例就是在表里面添加一条数据\nsql\n\t结构化的查询语句\n       DDL 定义语句\n       DML 操作语句\n       DQL 查询语句\n       DCL 控制语句\n\n数据类型\n\t整形\n\t\tint\n\t小数\n\t\tfloat\n\t\tdouble\n\t日期\n\t\tdate\n\t\ttime\n\t\tdateTime\n\t\ttimeStamp\n\t字符串\n\t\tchar\n\t\tvarchar\n字段属性\n\t不为空\n\t\tnot null\n\t默认值\n\t\tdefault\n\t主键\n\t\tprimary key\n\t自增\n\t\tauto_increment\n\t注释\n\t\tcomment\n\t唯一\n\t\tunique\n\n表记录的操作\n\t增\n\t\tinsert into 表名 values (值1,值2,...)\n\t删\n\t\tdelete from 表名 where 条件\n\t改\n\t\tupdate 表名 set 字段名 &#x3D; 字段值 where 条件</code></pre>\n\n<h4 id=\"单表约束\"><a href=\"#单表约束\" class=\"headerlink\" title=\"单表约束\"></a>单表约束</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">主键约束\n\tprimary key (默认是非空并且唯一的)\n非空约束\n\tnot null\n唯一约束\n\tunique</code></pre>\n\n<h4 id=\"单表查询\"><a href=\"#单表查询\" class=\"headerlink\" title=\"单表查询\"></a>单表查询</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">查询所有\n\tselect * from 表名\n\n条件查询\n\tselect * from 表名 where 条件\n\t\n模糊查询\n\tselect * from 表名 where 字段名 like (%代表0个或者多个字符,_代表一个字符)\n\t\n聚合函数查询\n\tmax()\n\tmin()\n\tsum()\n\tavg()\n\tcount(*)\n\t查询出来的数据都是一个单值,只有一个值\n\n排序查询 \n\torder by 字段名称 (asc升序 desc降序)\n\n分组查询\n\tgroup by 字段名称 \n\t\n\t注意:分组之后的查询字段,要么是分组字段,要么是聚合函数(是一个单值,对每一组做统计),其他字段,没有任何意义!!!\n\n分页查询\n\tLIMIT 起始索引,每页显示的条数;\n\t公式：起始索引 &#x3D; (当前页数-1) * 每页显示的条数\n\t\n书写的顺序(读起来更像一段话)\n\tselect -- from -- where -- GROUP BY -- having -- order by -- limit\n\t\n执行的顺序\n\tfrom -- where -- group by -- having -- select -- order by -- limit\n\t\n\tfrom:需要哪张表中查询数据\n\twhere:根据条件过滤表中的数据 \t\t\t\t---分组之前,过滤的是表中所有的数据\n\tgroup by:将where过滤后的数据进行分组\n\thaving:对上面已经分组的每一组数据进行过滤  \t---分组之后,过滤的是分组之后每一组数据\n\tselect:查看结果集的哪些列\n\torder by:把结果集按照指定的顺序排列\n\tlimit:需要取到结果集的前几行</code></pre>\n\n\n\n<h4 id=\"多表约束\"><a href=\"#多表约束\" class=\"headerlink\" title=\"多表约束\"></a>多表约束</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">多表之间是通过外键进行关联的\n\t\n外键作用\n\t保证数据的完整性和有效性,有了外键约束,就不能随意的删除表中的数据\n\t\n添加外键代码\n\t在员工表上添加约束.让员工表中的dep_id作为外键指向部门表的主键\n\tALTER table employee add constraint fk_001 foreign key(dep_id) references department(id)</code></pre>\n\n\n\n<h4 id=\"多表关系\"><a href=\"#多表关系\" class=\"headerlink\" title=\"多表关系\"></a>多表关系</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">一对一\n\t建表原则\n\t\t在任意一方,添加外键指向另一方的主键,并且让外键唯一\n\t应用\n\t\t数据库的优化 分表(把一张表分为2张表)\n一对多\n\t建表原则\n\t\t在多的一方添加外键,指向一的一方的主键\n\n多对多\n\t建表原则\n\t\t需要借助第三张中间表,中间表至少有两个字段,作为第三张表的外键,分别指向另外两张表的主键</code></pre>\n\n\n\n<h4 id=\"多表查询\"><a href=\"#多表查询\" class=\"headerlink\" title=\"多表查询\"></a>多表查询</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">1,交叉查询\n\t所有表的组合情况\n\n2,内连接查询(所有表的交集(inner))\n\t隐式内连接\n\t\t表与表之间使用,连接,条件使用where连接\n\t显示内连接\n\t\t表与表之间使用inner连接,条件使用on连接\n\n3,外连接查询\n\t左外连接\n\t\t使用left join 连接,查的是左边表的全部和两张表的交集\n\t右外连接\n\t\t使用right join 连接,查的是右边表的全部和两张表的交集\n4,子查询\n\t结果是单行单列:使用运算符连接\n\t结果是多行单列:使用in any all exist 连接\n\t结果是多行多列:作为一张虚拟的表参与运算\n5,自关联查询\n\t是一张特殊的表,可以将它当做两张表,起不同的别名,用条件关联上</code></pre>\n\n\n\n","text":"昨日回顾数据库概念 存储数据的文件系统,通过标准的sql访问,方便对数据管理 安装 mysql Navicat 应用 一般一个项目创建一个数据库 一个实体创建一张表 一个对象的实例就是在表里面添加一条数据 sql 结构化的查询语句 DDL 定义语句 DML 操作语句 DQL 查询...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"后端","slug":"后端","count":14,"path":"api/categories/后端.json"}],"tags":[{"name":"sql","slug":"sql","count":3,"path":"api/tags/sql.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%98%A8%E6%97%A5%E5%9B%9E%E9%A1%BE\"><span class=\"toc-text\">昨日回顾</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%95%E8%A1%A8%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">单表约束</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8D%95%E8%A1%A8%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">单表查询</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E8%A1%A8%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">多表约束</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E8%A1%A8%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">多表关系</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">多表查询</span></a></li></ol>","author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"24_node概念_模块化_内置模块","uid":"d15fe50aabdeda8cc871dc1941f0910d","slug":"day24_课程笔记","date":"2022-12-01T13:34:25.200Z","updated":"2022-12-01T13:38:31.658Z","comments":true,"path":"api/articles/day24_课程笔记.json","keywords":null,"cover":null,"text":"昨日回顾单表约束 主键约束 非空约束 唯一约束 多表约束 外键 单表查询 查询所有 条件查询 模糊查询 聚合函数查询 分组查询 排序查询 分页查询 书写顺序 select -- from -- where -- group by -- having -- order by -- ...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"Node","slug":"Node","count":2,"path":"api/categories/Node.json"}],"tags":[{"name":"node","slug":"node","count":2,"path":"api/tags/node.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}},"next_post":{"title":"22_数据库安装_建表_增删改查","uid":"d0cd3b69cac8d24123497120cff3bdf6","slug":"day22_课堂笔记","date":"2022-12-01T13:22:58.585Z","updated":"2022-12-01T13:49:32.492Z","comments":true,"path":"api/articles/day22_课堂笔记.json","keywords":null,"cover":null,"text":"昨日回顾闭包 概念 是一个函数,有权访问另外一个函数作用域里面的变量,这个变量所在的函数就是闭包 作用 延伸变量的作用范围 应用 立即执行函数 let和const 特点 1,都有块级作用域 2,没有变量提升 3,在同一个域中不能重复定义 4,有暂时性死区 使用场景 1,const...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"后端","slug":"后端","count":14,"path":"api/categories/后端.json"}],"tags":[{"name":"sql","slug":"sql","count":3,"path":"api/tags/sql.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}}}