{"title":"四. 综合项目[vue-todo]","uid":"2f3a385f9a8a16e29dda76e13810d322","slug":"四. 综合项目[vue-todo]_new","date":"2022-12-02T11:29:05.816Z","updated":"2022-12-02T11:29:05.816Z","comments":true,"path":"api/articles/四. 综合项目[vue-todo]_new.json","keywords":null,"cover":[],"content":"<p><a name=\"ce3b5367\"></a></p>\n<h1 id=\"一-搭建项目\"><a href=\"#一-搭建项目\" class=\"headerlink\" title=\"一. 搭建项目\"></a>一. 搭建项目</h1><p><a name=\"3caa48a2\"></a></p>\n<h2 id=\"1-使用脚手架搭建项目\"><a href=\"#1-使用脚手架搭建项目\" class=\"headerlink\" title=\"1 使用脚手架搭建项目\"></a>1 使用脚手架搭建项目</h2><p>通过<code>vue create vue-todo</code>创建一个项目</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">vue create vue-todo</code></pre>\n\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1649917944243-950f11da-0ddd-4670-8789-2d99e8f9b083.png\" alt=\"图片.png\"><br><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1649918125242-6bb693d7-164a-4ba8-b9b4-c6fc4c572290.png\" alt=\"图片.png\"><br><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1649918154874-2deb13cf-91d5-48b8-8336-9a3009b30b64.png\" alt=\"图片.png\"><br><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1649918197497-287bfb7f-9838-4041-8939-499707da6537.png\" alt=\"图片.png\"><br><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1649918251939-722b2b94-c1cd-42f9-9c41-c61a6cdf6a47.png\" alt=\"图片.png\"><br><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1649918326524-8135de61-6e3b-4973-b7ca-44206ca2eee2.png\" alt=\"图片.png\"></p>\n<p><a name=\"5a91e745\"></a></p>\n<h2 id=\"2-启动项目\"><a href=\"#2-启动项目\" class=\"headerlink\" title=\"2 启动项目\"></a>2 启动项目</h2><p>进入到项目目录, 执行命令</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">npm run serve</code></pre>\n\n<ol>\n<li>启动一个内置的调试web server(默认8080)</li>\n<li>支持热更新(实时改变代码, 重新编译)</li>\n</ol>\n<p><a name=\"039e16e8\"></a></p>\n<h2 id=\"3-测试\"><a href=\"#3-测试\" class=\"headerlink\" title=\"3 测试\"></a>3 测试</h2><p>打开浏览器, 测试</p>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/image-20211205094536347.png\"></p>\n<p><a name=\"e35f0aa6\"></a></p>\n<h1 id=\"二-项目分析\"><a href=\"#二-项目分析\" class=\"headerlink\" title=\"二. 项目分析\"></a>二. 项目分析</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>组件化思想</p></blockquote>\n<p>vue项目的一个重要的特点就是组件化的思想, 一个页面由多个组件组成, 组件再包含子组件</p>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/image-20200206180211133.png\"></p>\n<p><a name=\"e221db84\"></a></p>\n<h2 id=\"1-组件的拆分\"><a href=\"#1-组件的拆分\" class=\"headerlink\" title=\"1 组件的拆分\"></a>1 组件的拆分</h2><p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/image-20211205095004292.png\"></p>\n<p>主页拆分成3个组件</p>\n<ul>\n<li>MainHeader: 头部</li>\n<li>MainTodo: 主体 <ul>\n<li>TodoItem</li>\n<li>TodoInfo</li>\n</ul>\n</li>\n<li>MainFooter: 底部</li>\n</ul>\n<p>最终形成的组件树结构如下:</p>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/image-20211205095358877.png\"></p>\n<p><a name=\"f0be32e6\"></a></p>\n<h2 id=\"2-实现整体结构\"><a href=\"#2-实现整体结构\" class=\"headerlink\" title=\"2 实现整体结构\"></a>2 实现整体结构</h2><p><a name=\"9d11b5ef\"></a></p>\n<h3 id=\"1-清理App-vue\"><a href=\"#1-清理App-vue\" class=\"headerlink\" title=\"1) 清理App.vue\"></a>1) 清理App.vue</h3><p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/image-20211205100850366.png\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>示例</p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div id&#x3D;&quot;app&quot;&gt;&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  name: &#39;App&#39;,\n  components: &#123;&#125;,\n&#125;\n&lt;&#x2F;script&gt;\n\n&lt;style lang&#x3D;&quot;stylus&quot;&gt;&lt;&#x2F;style&gt;</code></pre>\n\n<p><a name=\"804b789f\"></a></p>\n<h3 id=\"2-创建子组件\"><a href=\"#2-创建子组件\" class=\"headerlink\" title=\"2) 创建子组件\"></a>2) 创建子组件</h3><p>创建App.vue的子组件</p>\n<ul>\n<li>MainHeader</li>\n<li>MainTodo</li>\n<li>MainFooter</li>\n</ul>\n<p>在<code>components</code>目录下, 创建三个文件</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>MainHeader.vue</p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div&gt;头部&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  name: &#39;MainHeader&#39;,\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>MainTodo.vue</p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div&gt;主体&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  name: &#39;MainTodo&#39;,\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>MainFooter</p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div&gt;底部&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  name: &#39;MainFooter&#39;,\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<p><a name=\"346d4dab\"></a></p>\n<h3 id=\"3-挂载子组件\"><a href=\"#3-挂载子组件\" class=\"headerlink\" title=\"3) 挂载子组件\"></a>3) 挂载子组件</h3><p>在<code>App.vue</code>文件中</p>\n<ul>\n<li>导入组件对象</li>\n<li>挂载组件对象</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>示例</p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script&gt;\n&#x2F;&#x2F; 导入组件对象\n&#x2F;&#x2F; 打包工具允许不写后缀(支持的后缀js, mjs, vue)\nimport MainHeader from &#39;.&#x2F;components&#x2F;MainHeader&#39;\nimport MainTodo from &#39;.&#x2F;components&#x2F;MainTodo&#39;\nimport MainFooter from &#39;.&#x2F;components&#x2F;MainFooter&#39;\n\nexport default &#123;\n  name: &#39;App&#39;,\n  &#x2F;&#x2F; 挂载组件\n  components: &#123;\n    &#x2F;&#x2F; 属性名(组件名): 属性值(组件对象)\n    MainHeader: MainHeader,\n    MainTodo: MainTodo,\n    MainFooter: MainFooter,\n  &#125;,\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>风格指南</p></blockquote>\n<ol>\n<li>组件文件的命名使用驼峰法, eg: <code>MainHeader.vue</code></li>\n<li>组件对象的名称跟文件名保持一致, eg: <code>&#123;name: &#39;MainHeader&#39;&#125;</code></li>\n</ol>\n<p><a name=\"e1102951\"></a></p>\n<h3 id=\"4-引用子组件\"><a href=\"#4-引用子组件\" class=\"headerlink\" title=\"4) 引用子组件\"></a>4) 引用子组件</h3><p>在<code>App.vue</code>中模板中引用三个子组件</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>示例</p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div id&#x3D;&quot;app&quot;&gt;\n    &lt;!-- 引用组件 --&gt;\n    &lt;!-- &lt;MainHeader&gt;&lt;&#x2F;MainHeader&gt; --&gt;\n    &lt;!-- \n      更推荐在HTML模板中, 使用中横线的命名\n      将大写字母替换成-(中横线)\n      由来: 在HTML中, 标签名通常是小写字母\n     --&gt;\n    &lt;main-header&gt;&lt;&#x2F;main-header&gt;\n    &lt;main-todo&gt;&lt;&#x2F;main-todo&gt;\n    &lt;main-footer&gt;&lt;&#x2F;main-footer&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>风格指南</p></blockquote>\n<ul>\n<li>在HTML模板中, 我们使用中横线的命名规范</li>\n<li>原因 <ul>\n<li>在HTML中, 标签名通常是小写字母</li>\n<li>便于和HTML原生标签区分</li>\n</ul>\n</li>\n</ul>\n<p>测试如下, 可以看到App的组件树</p>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/image-20211205104820831.png\"></p>\n<p><a name=\"963bc652\"></a></p>\n<h2 id=\"3-优化\"><a href=\"#3-优化\" class=\"headerlink\" title=\"3 优化\"></a>3 优化</h2><p><a name=\"dbddd0a5\"></a></p>\n<h3 id=\"1-将文件改造成目录\"><a href=\"#1-将文件改造成目录\" class=\"headerlink\" title=\"1) 将文件改造成目录\"></a>1) 将文件改造成目录</h3><p>当一个组件比较复杂时, 通常把这个组件放到一个文件夹下, 文件名改成<code>index.vue</code></p>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/image-20211205105528491.png\"></p>\n<p><a name=\"804b789f-1\"></a></p>\n<h3 id=\"2-创建子组件-1\"><a href=\"#2-创建子组件-1\" class=\"headerlink\" title=\"2) 创建子组件\"></a>2) 创建子组件</h3><p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/image-20211205105750230.png\"></p>\n<p><a name=\"a336b429\"></a></p>\n<h3 id=\"3-完成子组件的挂载\"><a href=\"#3-完成子组件的挂载\" class=\"headerlink\" title=\"3) 完成子组件的挂载\"></a>3) 完成子组件的挂载</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>TodoItem.vue</p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div&gt;--TodoItem&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  name: &#39;TodoItem&#39;,\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>TodoInfo.vue</p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div&gt;--TodoInfo&lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  name: &#39;TodoInfo&#39;,\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<p>挂载引用组件, 改造<code>MainTodo/index.vue</code></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>示例</p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div&gt;\n    主体\n    &lt;todo-item&gt;&lt;&#x2F;todo-item&gt;\n    &lt;todo-info&gt;&lt;&#x2F;todo-info&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nimport TodoItem from &#39;.&#x2F;coms&#x2F;TodoItem&#39;\nimport TodoInfo from &#39;.&#x2F;coms&#x2F;TodoInfo&#39;\n\nexport default &#123;\n  name: &#39;MainTodo&#39;,\n  components: &#123;\n    TodoItem,\n    TodoInfo,\n  &#125;,\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<p>测试</p>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/image-20211205112721047.png\"><br><a name=\"f1b14629\"></a></p>\n<h1 id=\"三-项目规范\"><a href=\"#三-项目规范\" class=\"headerlink\" title=\"三. 项目规范\"></a>三. 项目规范</h1><p><a name=\"rSdet\"></a></p>\n<h2 id=\"1-配色方案\"><a href=\"#1-配色方案\" class=\"headerlink\" title=\"1 配色方案\"></a>1 配色方案</h2><p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25807822/1655429764466-d7cee8c1-fd35-4988-bdcd-0c4887ae36c8.png#averageHue=%2386b19d&clientId=u47930bf3-ac9b-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u5dd5aadc&name=image.png&originHeight=190&originWidth=625&originalType=url&ratio=1&rotation=0&showTitle=false&size=36068&status=done&style=none&taskId=ue93aeb8d-0f8f-4bbd-8be9-9bc4f7ecd10&title=\" alt=\"image.png\"><br />参考Google Material配置方案<br /><a href=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/www.materialpalette.com\">https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/www.materialpalette.com</a><br><a name=\"XvIuJ\"></a></p>\n<h2 id=\"2-安装两个vscode插件\"><a href=\"#2-安装两个vscode插件\" class=\"headerlink\" title=\"2 安装两个vscode插件\"></a>2 安装两个vscode插件</h2><ol>\n<li>stylus格式化工具</li>\n<li>stylus编译工具</li>\n</ol>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/25807822/1655429765095-c96b9af9-3f9f-42f5-89c4-81401acf4807.png#averageHue=%232b2f38&clientId=u47930bf3-ac9b-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u1e90fe64&name=image.png&originHeight=708&originWidth=1703&originalType=url&ratio=1&rotation=0&showTitle=false&size=273079&status=done&style=none&taskId=u9dede555-94aa-40f9-aa31-a8473b82b37&title=\" alt=\"image.png\"><br /><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1655429765091-7a730198-d93d-474e-85a1-8b1d30aaf1ab.png\" alt=\"image.png\"></p>\n<p><a name=\"8a10d4fc\"></a></p>\n<h2 id=\"3-加载背景图片\"><a href=\"#3-加载背景图片\" class=\"headerlink\" title=\"3. 加载背景图片\"></a>3. 加载背景图片</h2><p><a name=\"292a04b5\"></a></p>\n<h3 id=\"1-编写reset样式\"><a href=\"#1-编写reset样式\" class=\"headerlink\" title=\"1) 编写reset样式\"></a>1) 编写reset样式</h3><p>在<code>assets</code>目录创建<code>styles\\reset.styl</code>文件</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">*\n  margin: 0\n  padding: 0\n\nbody\n  font: 14px &#39;Microsoft Yahei&#39;\n  &#x2F;&#x2F; 背景图片\n  &#x2F;&#x2F; style文件在的相对路径, 相对于当前的reset.styl这个文件\n  background-image: url(&#39;..&#x2F;images&#x2F;bg.jpg&#39;)\n  &#x2F;&#x2F; 背景图片位置固定\n  background-attachment: fixed\n  &#x2F;&#x2F; 背景不要重复\n  background-repeat: no-repeat\n  &#x2F;&#x2F; 背景位置居中\n  background-position: center center\n  &#x2F;&#x2F; 背景覆盖整个viewport\n  background-size: cover\n  &#x2F;&#x2F; 当背景没有加载时的颜色\n  background-color: #fff</code></pre>\n<p>这里url中的相对路径是相对于reset.styl这个文件<br><a name=\"a6c2014e\"></a></p>\n<h3 id=\"2-加载到项目中\"><a href=\"#2-加载到项目中\" class=\"headerlink\" title=\"2) 加载到项目中\"></a>2) 加载到项目中</h3><p>在<code>App.vue</code>中, 使用<code>@import</code>加载reset.styl文件</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;style lang&#x3D;&quot;stylus&quot;&gt;\n&#x2F;&#x2F; 在vue项目不推荐使用相对路径\n@import &#39;.&#x2F;assets&#x2F;styles&#x2F;reset.styl&#39;\n&lt;&#x2F;style&gt;</code></pre>\n<p>这里的相对路径是相对<code>App.vue</code><br />但是, 由于在vue项目相对路径容易出错, <strong>不推荐</strong>直接使用相对路径<br />推荐使用路径别名, 参考Vue-cli的官方配置</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>测试效果</p></blockquote>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1649987932162-beef0ea3-3d2a-48be-8a7f-b3450edd4cce.png\" alt=\"image.png\"></p>\n<p><a name=\"6c1b586a\"></a></p>\n<h1 id=\"四-实现MainHeader组件\"><a href=\"#四-实现MainHeader组件\" class=\"headerlink\" title=\"四. 实现MainHeader组件\"></a>四. 实现MainHeader组件</h1><p><a name=\"cedc3b98\"></a></p>\n<h2 id=\"1-页面部分\"><a href=\"#1-页面部分\" class=\"headerlink\" title=\"1 页面部分\"></a>1 页面部分</h2><p>编写<code>template</code>模板内容</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;header class&#x3D;&quot;main-header&quot;&gt;\n    &lt;h1&gt;TodoList&lt;&#x2F;h1&gt;\n  &lt;&#x2F;header&gt;\n&lt;&#x2F;template&gt;</code></pre>\n\n<p><a name=\"65da5ebf\"></a></p>\n<h2 id=\"2-样式部分\"><a href=\"#2-样式部分\" class=\"headerlink\" title=\"2 样式部分\"></a>2 样式部分</h2><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;style lang&#x3D;&quot;stylus&quot;&gt;\n  .main-header\n    text-align: center\n    h1\n      margin: 20px\n      font-size: 100px\n      font-weight: 200\n      color: rgb(252, 157, 154)\n      &#x2F;&#x2F; 给文字阴影\n      text-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1)\n&lt;&#x2F;style&gt;</code></pre>\n\n<p><a name=\"419fe23d\"></a></p>\n<h3 id=\"1-优化\"><a href=\"#1-优化\" class=\"headerlink\" title=\"1) 优化\"></a>1) 优化</h3><p>在<code>styles</code>目录创建<code>theme.styl</code>, 在主题文件中, 定义颜色变量</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&#x2F;&#x2F; 主题颜色(变量)\n$red &#x3D; rgb(254, 67, 101)\n$lightred &#x3D; rgb(252, 157, 154)\n$yellow &#x3D; rgb(249, 205, 173)\n$ligthgreen &#x3D; rgb(200, 200, 169)\n$green &#x3D; rgb(131, 175, 155)</code></pre>\n\n<p>在需要使用颜色时, 引用主题文件, 应用变量</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;style lang&#x3D;&quot;stylus&quot;&gt;\n@import &#39;..&#x2F;assets&#x2F;styles&#x2F;theme.styl&#39;\n\n.main-header\n  text-align: center\n  h1\n    margin: 20px\n    font-size: 100px\n    font-weight: 200\n    color: $lightred\n    &#x2F;&#x2F; 给文字阴影\n    text-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1)\n&lt;&#x2F;style&gt;</code></pre>\n\n<p><a name=\"be62178b\"></a></p>\n<h1 id=\"五-初步实现MainTodo组件\"><a href=\"#五-初步实现MainTodo组件\" class=\"headerlink\" title=\"五. 初步实现MainTodo组件\"></a>五. 初步实现MainTodo组件</h1><p><a name=\"996cb6f3\"></a></p>\n<h2 id=\"1-核心组件的拆分\"><a href=\"#1-核心组件的拆分\" class=\"headerlink\" title=\"1 核心组件的拆分\"></a>1 核心组件的拆分</h2><p>大致可以拆分成如下部分</p>\n<ul>\n<li>input输入框</li>\n<li>多个TodoItem组件</li>\n<li>一个TodoInfo组件</li>\n</ul>\n<p><a name=\"850f7ff7\"></a></p>\n<h2 id=\"2-页面部分\"><a href=\"#2-页面部分\" class=\"headerlink\" title=\"2 页面部分\"></a>2 页面部分</h2><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div class&#x3D;&quot;main-todo&quot;&gt;\n    &lt;input class&#x3D;&quot;add-todo&quot; type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;what to do?↵&quot; autofocus &#x2F;&gt;\n    &lt;todo-item&gt;&lt;&#x2F;todo-item&gt;\n    &lt;todo-info&gt;&lt;&#x2F;todo-info&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n\n<p><a name=\"bc406c0d\"></a></p>\n<h2 id=\"3-样式部分\"><a href=\"#3-样式部分\" class=\"headerlink\" title=\"3 样式部分\"></a>3 样式部分</h2><p><a name=\"7c081cf1\"></a></p>\n<h3 id=\"1-整体的盒子样式\"><a href=\"#1-整体的盒子样式\" class=\"headerlink\" title=\"1) 整体的盒子样式\"></a>1) 整体的盒子样式</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;style lang&#x3D;&quot;stylus&quot;&gt;\n  .main-todo\n    width: 600px\n    margin: 0 auto\n    background-color: #fff\n    box-shadow: 0 0 5px #666\n&lt;&#x2F;style&gt;</code></pre>\n\n<p><a name=\"d7099cde\"></a></p>\n<h3 id=\"2-输入框的美化\"><a href=\"#2-输入框的美化\" class=\"headerlink\" title=\"2) 输入框的美化\"></a>2) 输入框的美化</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;style lang&#x3D;&quot;stylus&quot;&gt;\n  .main-todo\n    width: 600px\n    margin: 0 auto\n    background-color: #fff\n    box-shadow: 0 0 5px #666\n    .add-todo\n      padding: 16px 16px 16px 36px\n      font-size: 24px\n      font-family: inherit &#x2F;&#x2F; ?? 加入inherit可以实现文字变细\n      font-weight: 200\n      border: none\n      outline: none\n&lt;&#x2F;style&gt;</code></pre>\n\n<p><a name=\"qAkmG\"></a></p>\n<h3 id=\"3-效果优化\"><a href=\"#3-效果优化\" class=\"headerlink\" title=\"3) 效果优化\"></a>3) 效果优化</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;style lang&#x3D;&quot;stylus&quot;&gt;\n.main-todo\n  width: 600px\n  margin: 0 auto\n  background-color: rgba(255, 255, 255, 0.3)\n  border-radius: 5px\n  box-shadow: 3px 3px 5px #666\n  .add-todo\n    padding: 16px 16px 16px 36px\n    width: 100%\n    background-color: rgba(255, 255, 255, 0.3)\n    font-size: 24px\n    font-family: inherit\n    font-weight: 200\n    border: none\n    outline: none\n    border-radius: 5px 5px 0 0\n    box-sizing: border-box\n&lt;&#x2F;style&gt;</code></pre>\n\n<p><a name=\"1c5efa84\"></a></p>\n<h1 id=\"六-实现TodoItem组件\"><a href=\"#六-实现TodoItem组件\" class=\"headerlink\" title=\"六. 实现TodoItem组件\"></a>六. 实现TodoItem组件</h1><p><a name=\"cedc3b98-1\"></a></p>\n<h2 id=\"1-页面部分-1\"><a href=\"#1-页面部分-1\" class=\"headerlink\" title=\"1 页面部分\"></a>1 页面部分</h2><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;input type&#x3D;&quot;checkbox&quot; &#x2F;&gt;\n    &lt;label&gt;待办1&lt;&#x2F;label&gt;\n    &lt;button&gt;&lt;&#x2F;button&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n\n<p><a name=\"65da5ebf-1\"></a></p>\n<h2 id=\"2-样式部分-1\"><a href=\"#2-样式部分-1\" class=\"headerlink\" title=\"2 样式部分\"></a>2 样式部分</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>分析</p></blockquote>\n<ol>\n<li>checkbox如何美化</li>\n<li>button如何美化</li>\n</ol>\n<p>将浏览器自带的样式隐藏, 通过after伪元素添加对应的内容</p>\n<p><a name=\"7c081cf1-1\"></a></p>\n<h3 id=\"1-整体的盒子样式-1\"><a href=\"#1-整体的盒子样式-1\" class=\"headerlink\" title=\"1) 整体的盒子样式\"></a>1) 整体的盒子样式</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;style lang&#x3D;&quot;stylus&quot;&gt;\n  .todo-item\n    &#x2F;&#x2F; 使用flex布局\n    display: flex\n    &#x2F;&#x2F; 水平方向 flex项目的排列(两端对齐)\n    justify-content: space-between\n    align-items: center\n    padding: 10px\n    border-top: 1px solid rgba(0, 0, 0, 0.1)\n    font-size: 24px\n&lt;&#x2F;style&gt;</code></pre>\n\n<p><a name=\"6f6e30a3\"></a></p>\n<h3 id=\"2-checkbox美化\"><a href=\"#2-checkbox美化\" class=\"headerlink\" title=\"2) checkbox美化\"></a>2) checkbox美化</h3><p>隐藏浏览器自带的样式, 通过after伪元素添加对应的内容</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;style lang&#x3D;&quot;stylus&quot;&gt;\n.todo-item\n  display: flex\n  justify-content: space-between\n  align-items: center\n  padding: 10px\n  border-top: 1px solid rgba(0, 0, 0, 0.1)\n  font-size: 24px\n  input[type&#x3D;&#39;checkbox&#39;]\n    &#x2F;&#x2F; 表单元素美化的原则: 去掉浏览器自带的样式, 使用自定义样式\n    width: 40px\n    height: 40px\n    border: none\n    outline: none\n    appearance: none\n    &#x2F;&#x2F; &amp;表示父元素\n    &amp;::after\n      content: url(&#39;..&#x2F;..&#x2F;..&#x2F;assets&#x2F;images&#x2F;unChecked.svg&#39;)\n    &amp;:checked::after\n      content: url(&#39;..&#x2F;..&#x2F;..&#x2F;assets&#x2F;images&#x2F;Checked.svg&#39;)\n&lt;&#x2F;style&gt;</code></pre>\n\n<p><a name=\"d87afc58\"></a></p>\n<h3 id=\"3-label的设置\"><a href=\"#3-label的设置\" class=\"headerlink\" title=\"3) label的设置\"></a>3) label的设置</h3><p>label占据所有剩余空间</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">label\n    flex: 1\n    margin-left: 10px</code></pre>\n\n<p><a name=\"bbb4bcc4\"></a></p>\n<h3 id=\"4-button的美化\"><a href=\"#4-button的美化\" class=\"headerlink\" title=\"4) button的美化\"></a>4) button的美化</h3><p>隐藏浏览器自带的样式</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">button\n    width: 40px\n    height: 40px\n    appearance: none\n    border: none\n    outline: none\n    background-color: transparent\n    cursor: pointer\n&amp;:hover\n  button::after\n    content: &#39;×&#39;\n    font-size: 30px\n    color: $lightred</code></pre>\n\n<p>当鼠标经过todo-item时, 显示button的伪元素</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&amp;:hover\n  button::after\n    content: &#39;x&#39;\n    font-size: 24px\n    color: $lightred</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>完整示例</p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;style lang&#x3D;&quot;stylus&quot;&gt;\n@import &#39;..&#x2F;..&#x2F;..&#x2F;assets&#x2F;styles&#x2F;theme.styl&#39;\n\n.todo-item\n  display: flex\n  justify-content: space-between\n  align-items: center\n  padding: 10px\n  border-top: 1px solid rgba(0, 0, 0, 0.1)\n  font-size: 24px\n  input\n    appearance: none\n    border: none\n    outline: none\n    &amp;::after\n      content: url(&#39;..&#x2F;..&#x2F;..&#x2F;assets&#x2F;images&#x2F;unChecked.svg&#39;)\n    &amp;:checked::after\n      content: url(&#39;..&#x2F;..&#x2F;..&#x2F;assets&#x2F;images&#x2F;Checked.svg&#39;)\n  label\n    flex: 1\n    padding-left: 10px\n  button\n    width: 40px\n    height: 40px\n    background-color: transparent\n    appearance: none\n    border: none\n    outline: none\n    cursor: pointer\n  &amp;:hover\n    button::after\n      content: &#39;X&#39;\n      font-size: 24px\n      color: $lightred\n&lt;&#x2F;style&gt;</code></pre>\n<p><a name=\"bUHeJ\"></a></p>\n<h2 id=\"3-优化-1\"><a href=\"#3-优化-1\" class=\"headerlink\" title=\"3 优化\"></a>3 优化</h2><p><a name=\"sX48H\"></a></p>\n<h3 id=\"1-路径别名\"><a href=\"#1-路径别名\" class=\"headerlink\" title=\"1) 路径别名\"></a>1) 路径别名</h3><p>在项目的根目录下, 编辑<code>vue.config.js</code>配置文件</p>\n<p>在该配置文件中, 使用<code>CommonJS</code>规范, 最终导出一个对象</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>示例</p></blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 导入node的核心模块\nconst path &#x3D; require(&#39;path&#39;)\n&#x2F;&#x2F; 导入用户定义的模块\nconst &#123; defineConfig &#125; &#x3D; require(&#39;@vue&#x2F;cli-service&#39;)\n\n&#x2F;&#x2F; 导出配置对象\nmodule.exports &#x3D; defineConfig(&#123;\n  transpileDependencies: true,\n  chainWebpack: (config) &#x3D;&gt; &#123;\n    config.resolve.alias\n      .set(&#39;@&#39;, path.join(__dirname, &#39;.&#x2F;src&#39;))\n      .set(&#39;assets&#39;, path.join(__dirname, &#39;.&#x2F;src&#x2F;assets&#39;))\n      .set(&#39;images&#39;, path.join(__dirname, &#39;.&#x2F;src&#x2F;assets&#x2F;images&#39;))\n      .set(&#39;styles&#39;, path.join(__dirname, &#39;.&#x2F;src&#x2F;assets&#x2F;styles&#39;))\n  &#125;,\n&#125;)</code></pre>\n<p>当修改了配置文件后, <strong>重启项目</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm run serve</code></pre>\n<p><a name=\"jI5Z0\"></a></p>\n<h3 id=\"2-使用别名\"><a href=\"#2-使用别名\" class=\"headerlink\" title=\"2) 使用别名\"></a>2) 使用别名</h3><ul>\n<li>在HTML(template)和CSS(style)中, 加上<code>~</code>使用</li>\n<li>在js(script)中, 别名可以直接使用</li>\n</ul>\n<p>把之前使用相对路径的地方, 改造成<code>别名</code></p>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1650005616412-93d0aba9-1f2f-4f15-a55a-596dbe294408.png\" alt=\"image.png\"><br><br /><br><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1650005649782-0f6612af-1fd9-4b57-b4bb-aac3271e6923.png\" alt=\"image.png\"><br><br /><br><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1650005675893-40b56af9-2aaf-4bb3-9794-11982194d178.png\" alt=\"image.png\"><br><br /><br><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1650005708174-75e4969f-ec04-46d7-8e64-97166f00f5e0.png\" alt=\"image.png\"><br><a name=\"uP2qM\"></a></p>\n<h3 id=\"3-CSS复用\"><a href=\"#3-CSS复用\" class=\"headerlink\" title=\"3) CSS复用\"></a>3) CSS复用</h3><p>在<code>styles</code>目录下, 创建<code>theme.styl</code>文件</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">$red &#x3D; #fe4365\n$lightred &#x3D; #fc9d9a\n$yellow &#x3D; #f9cdad\n$ligthgreen &#x3D; #c8c8a9\n$green &#x3D; #83af9b</code></pre>\n<p>在需要使用颜色的文件中, 导入<code>theme.styl</code>, 使用变量</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;style lang&#x3D;&quot;stylus&quot;&gt;\n@import &#39;~styles&#x2F;theme.styl&#39;\n\n.main-header\n  &#x2F;&#x2F; 让整个header区域的文本水平居中\n  text-align: center\n  &#x2F;&#x2F; 设置垂直方面的间距(类似垂直方向居中)\n  padding: 50px 0\n  h1\n    color: $lightred\n    font-size: 100px\n    font-weight: 200\n    text-shadow: 5px 5px 5px rgba(0, 0, 0, 0.5)\n&lt;&#x2F;style&gt;</code></pre>\n<p>在<code>styles</code>目录下, 创建<code>mixins.styl</code>文件, 编写如下代码</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&#x2F;&#x2F; mixin: 混入(函数)\nclearDefault()\n  appearance: none\n  border: none\n  outline: none</code></pre>\n<p>在需要复用的地方, 引用<code>clearDefault</code></p>\n<p>在<code>MainTodo/index.vue</code>中</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&#x2F;&#x2F; 引入mixin文件\n@import &#39;~styles&#x2F;mixins.styl&#39;</code></pre>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1650007214712-bf2c3ece-6f6f-4ce3-a802-dc87db64f90b.png\" alt=\"image.png\"><br />在<code>MainTodo/TodoItem.vue</code>文件</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&#x2F;&#x2F; 引入mixin文件\n@import &#39;~styles&#x2F;mixins.styl&#39;</code></pre>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1650007267788-8c51d4d7-3dce-42b6-9be2-c16cfb627d53.png\" alt=\"image.png\"><br><a name=\"QQfdk\"></a></p>\n<h2 id=\"4-逻辑\"><a href=\"#4-逻辑\" class=\"headerlink\" title=\"4 逻辑\"></a>4 逻辑</h2><p>:::info</p>\n<ol>\n<li>由父组件决定渲染多少个子组件</li>\n<li>由父组件决定每个子组件中应该显示什么内容<br>:::<br>涉及到的核心知识点: <strong>父组件向子组件传值</strong></li>\n</ol>\n<p><a name=\"yKBFN\"></a></p>\n<h3 id=\"1-定义数据\"><a href=\"#1-定义数据\" class=\"headerlink\" title=\"1) 定义数据\"></a>1) 定义数据</h3><p>在父组件的<code>data</code>中声明数据</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">export default &#123;\n  name: &#39;MainTodo&#39;,\n  components: &#123;\n    TodoItem,\n    TodoInfo,\n  &#125;,\n  data() &#123;\n    return &#123;\n      todos: [\n        &#123; id: 1, content: &#39;待办1&#39;, completed: 0 &#125;,\n        &#123; id: 2, content: &#39;待办2&#39;, completed: 0 &#125;,\n        &#123; id: 3, content: &#39;待办3&#39;, completed: 0 &#125;,\n      ],\n    &#125;\n  &#125;,\n&#125;</code></pre>\n<p><a name=\"JUbQl\"></a></p>\n<h3 id=\"2-渲染模板\"><a href=\"#2-渲染模板\" class=\"headerlink\" title=\"2) 渲染模板\"></a>2) 渲染模板</h3><p>在<code>MainTodo</code>的模板中, 通过列表渲染子组件(TodoItem)</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;todo-item v-for&#x3D;&quot;item in todos&quot; :key&#x3D;&quot;item.id&quot;&gt;&lt;&#x2F;todo-item&gt;</code></pre>\n<p><a name=\"b2Ls6\"></a></p>\n<h3 id=\"3-父组件向子组件传参\"><a href=\"#3-父组件向子组件传参\" class=\"headerlink\" title=\"3) 父组件向子组件传参\"></a>3) 父组件向子组件传参</h3><p>:::info</p>\n<ol>\n<li>在父组件的模板中, 绑定一个自定义的属性</li>\n<li>在子组件的对象中, 通过props接收<br>:::<br>改造父组件<code>MainTodo</code>修改 模板渲染<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!-- 父组件-&gt;子组件传参\n  1. 在父组件的模板中, 绑定一个自定义的属性\n  2. 在子组件的对象中, 通过props接收\n --&gt;\n&lt;todo-item v-for&#x3D;&quot;item in todos&quot; :key&#x3D;&quot;item.id&quot; :todo&#x3D;&quot;item&quot;&gt;&lt;&#x2F;todo-item&gt;</code></pre>\n改造子组件<code>TodoItem</code>修改对象的定义<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">export default &#123;\n  name: &#39;TodoItem&#39;,\n  props: &#123;\n    todo: &#123;\n      type: Object,\n      required: true,\n    &#125;,\n  &#125;,\n&#125;</code></pre>\n改造子组件<code>TodoItem</code>渲染模板<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div class&#x3D;&quot;todo-item&quot;&gt;\n    &lt;input type&#x3D;&quot;checkbox&quot; &#x2F;&gt;\n    &lt;label&gt;&#123;&#123; todo.content &#125;&#125;&lt;&#x2F;label&gt;\n    &lt;button&gt;&lt;&#x2F;button&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n<a name=\"wcTI2\"></a><h1 id=\"七-实现后台接口\"><a href=\"#七-实现后台接口\" class=\"headerlink\" title=\"七. 实现后台接口\"></a>七. 实现后台接口</h1>复用之前写api接口<br />准备数据<code>vue_todos.sql</code><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">&#x2F;*\nNavicat MySQL Data Transfer\n\nSource Server         : localhost\nSource Server Version : 50733\nSource Host           : localhost:3306\nSource Database       : db2103\n\nTarget Server Type    : MYSQL\nTarget Server Version : 50733\nFile Encoding         : 65001\n\nDate: 2022-04-15 16:16:10\n*&#x2F;\n\nSET FOREIGN_KEY_CHECKS&#x3D;0;\n\n-- ----------------------------\n-- Table structure for vue_todos\n-- ----------------------------\nDROP TABLE IF EXISTS &#96;vue_todos&#96;;\nCREATE TABLE &#96;vue_todos&#96; (\n  &#96;id&#96; int(11) NOT NULL AUTO_INCREMENT COMMENT &#39;主键&#39;,\n  &#96;content&#96; varchar(255) NOT NULL COMMENT &#39;内容&#39;,\n  &#96;completed&#96; tinyint(4) NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;0: 未完成 1: 已完成&#39;,\n  PRIMARY KEY (&#96;id&#96;)\n) ENGINE&#x3D;InnoDB AUTO_INCREMENT&#x3D;5 DEFAULT CHARSET&#x3D;utf8;\n\n-- ----------------------------\n-- Records of vue_todos\n-- ----------------------------\nINSERT INTO &#96;vue_todos&#96; VALUES (&#39;2&#39;, &#39;待办222&#39;, &#39;0&#39;);\nINSERT INTO &#96;vue_todos&#96; VALUES (&#39;3&#39;, &#39;111&#39;, &#39;0&#39;);\nINSERT INTO &#96;vue_todos&#96; VALUES (&#39;4&#39;, &#39;222&#39;, &#39;0&#39;);\n</code></pre>\n在Navicat软件中, 打开数据库-&gt;运行SQL文件<br /><br><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1650010765269-82318070-16d7-492c-a6c0-8c6ba38fd4fa.png\" alt=\"image.png\"><br><br />详见&lt;todo小项目&gt;的后台搭建<br><a name=\"iedw5\"></a><h1 id=\"八-实现列表功能\"><a href=\"#八-实现列表功能\" class=\"headerlink\" title=\"八. 实现列表功能\"></a>八. 实现列表功能</h1>在vue中发送ajax请求, 调用后端的接口</li>\n</ol>\n<p>:::info<br>在Vue项目中, 一般使用axios库, 发送ajax请求<br>:::<br><a name=\"r7Xtk\"></a></p>\n<h2 id=\"1-安装插件\"><a href=\"#1-安装插件\" class=\"headerlink\" title=\"1 安装插件\"></a>1 安装插件</h2><p>使用axios, vue-axios库<br><a name=\"A0Tgp\"></a></p>\n<h3 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1) 安装\"></a>1) 安装</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm i axios vue-axios</code></pre>\n<p><a name=\"uApRs\"></a></p>\n<h3 id=\"2-配置\"><a href=\"#2-配置\" class=\"headerlink\" title=\"2) 配置\"></a>2) 配置</h3><p>在<code>main.js</code>入口文件中. 配置插件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 导入axios和vue-axios\nimport axios from &#39;axios&#39;\nimport VueAxios from &#39;vue-axios&#39; &#x2F;&#x2F; vue-axios是一个vue的插件\n\n&#x2F;&#x2F; 使用Vue插件\n&#x2F;&#x2F; 插件的作用: 在Vue的原型对象上, 挂载了属性 $http\nVue.use(VueAxios, axios)</code></pre>\n<p><a name=\"dTEmG\"></a></p>\n<h3 id=\"3-测试-1\"><a href=\"#3-测试-1\" class=\"headerlink\" title=\"3) 测试\"></a>3) 测试</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 测试\nVue.$http.get(&#39;http:&#x2F;&#x2F;localhost:3000&#x2F;todos&#39;).then((res) &#x3D;&gt; &#123;\n   console.log(res)\n&#125;)</code></pre>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1650012279108-90c07e57-6ca7-4f63-835b-753380549566.png\" alt=\"image.png\"><br><a name=\"pbsEJ\"></a></p>\n<h2 id=\"2-调用接口获取数据\"><a href=\"#2-调用接口获取数据\" class=\"headerlink\" title=\"2 调用接口获取数据\"></a>2 调用接口获取数据</h2><p>由于数据是由<code>MainTodo</code>组件维护, 那么在该组件中</p>\n<ul>\n<li>发送请求, 获取数据</li>\n<li>完成data属性的初始化</li>\n</ul>\n<p>选择使用<code>created</code>生命周期函数, 在这个函数中, 获取数据</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">export default &#123;\n  name: &#39;MainTodo&#39;,\n  components: &#123;\n    TodoItem,\n    TodoInfo,\n  &#125;,\n  data() &#123;\n    return &#123;\n      todos: [],\n    &#125;\n  &#125;,\n  created() &#123;\n    &#x2F;&#x2F; 在MainTodo组件被创建时, 自动执行\n    console.log(&#39;MainTodo被创建了...&#39;)\n    &#x2F;&#x2F; 发送ajax请求\n    this.$http.get(&#39;http:&#x2F;&#x2F;localhost:3000&#x2F;todos&#39;).then((res) &#x3D;&gt; &#123;\n      console.log(res)\n      &#x2F;&#x2F; 解构res, 只关心data中的数据\n      const &#123; data &#125; &#x3D; res\n      if (data.code &#x3D;&#x3D; 0) &#123;\n        this.todos &#x3D; data.result\n      &#125;\n    &#125;)\n  &#125;,\n&#125;</code></pre>\n<p><a name=\"TTu8q\"></a></p>\n<h1 id=\"九-实现添加功能\"><a href=\"#九-实现添加功能\" class=\"headerlink\" title=\"九. 实现添加功能\"></a>九. 实现添加功能</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>具体需求</p></blockquote>\n<ol>\n<li><p>输入内容, 按下回车键, 添加一条记录</p>\n</li>\n<li><p>如果没有输入内容, 提示信息<code>请输入内容</code></p>\n</li>\n<li><p>添加完成后, 清空输入框</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>思路</p></blockquote>\n</li>\n<li><p>监听input输入框keyup事件-&gt;判断enter键按下-&gt;调用handleAdd方法</p>\n</li>\n<li><p>获取input输入框的数据(双向绑定)-&gt; 发送请求</p>\n</li>\n</ol>\n<p><a name=\"BHzG8\"></a></p>\n<h2 id=\"1-实现模板\"><a href=\"#1-实现模板\" class=\"headerlink\" title=\"1) 实现模板\"></a>1) 实现模板</h2><p>声明一个变量, 实现数据的双向绑定<code>content</code><br />监听keyup事件, 绑定一个处理函数<code>handleAdd</code></p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;input\n  class&#x3D;&quot;add-todo&quot;\n  type&#x3D;&quot;text&quot;\n  placeholder&#x3D;&quot;What to do↵&quot;\n  autofocus\n  v-model&#x3D;&quot;content&quot;\n  @keyup.enter&#x3D;&quot;handleAdd&quot;\n&#x2F;&gt;</code></pre>\n<p><a name=\"gDlNL\"></a></p>\n<h2 id=\"2-声明变量\"><a href=\"#2-声明变量\" class=\"headerlink\" title=\"2) 声明变量\"></a>2) 声明变量</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">data() &#123;\n  return &#123;\n    todos: [],\n    content: &#39;&#39;,\n  &#125;\n&#125;,</code></pre>\n<p><a name=\"b4aJh\"></a></p>\n<h2 id=\"3-声明方法\"><a href=\"#3-声明方法\" class=\"headerlink\" title=\"3) 声明方法\"></a>3) 声明方法</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">methods: &#123;\n    getTodos() &#123;\n      &#x2F;&#x2F; 发送ajax请求\n      this.$http.get(&#39;http:&#x2F;&#x2F;localhost:3000&#x2F;todos&#39;).then((res) &#x3D;&gt; &#123;\n        console.log(res)\n        &#x2F;&#x2F; 解构res\n        const &#123; data &#125; &#x3D; res\n        if (data.code &#x3D;&#x3D; 0) &#123;\n          this.todos &#x3D; data.result\n        &#125;\n      &#125;)\n    &#125;,\n    handleAdd() &#123;\n      &#x2F;&#x2F; console.log(&#39;@@@&#39;, this.content)\n      &#x2F;&#x2F; 判断内容不能为空\n      if (this.content.trim() &#x3D;&#x3D; &#39;&#39;) &#123;\n        alert(&#39;请输入待办内容&#39;)\n        return\n      &#125;\n      &#x2F;&#x2F; 发送post请求\n      this.$http\n        .post(&#39;http:&#x2F;&#x2F;localhost:3000&#x2F;todos&#39;, &#123; content: this.content &#125;)\n        .then((res) &#x3D;&gt; &#123;\n          const &#123; code, message, result &#125; &#x3D; res.data\n\n          if (code &#x3D;&#x3D; 0) &#123;\n            &#x2F;&#x2F; 重新获取数据\n            this.getTodos()\n            &#x2F;&#x2F; 清空输入框\n            this.content &#x3D; &#39;&#39;\n          &#125;\n        &#125;)\n    &#125;,\n  &#125;,</code></pre>\n<p>由于会经常调用获取数据, 因此, 封装成一个函数</p>\n<p><a name=\"wYg1D\"></a></p>\n<h1 id=\"十-实现修改功能\"><a href=\"#十-实现修改功能\" class=\"headerlink\" title=\"十. 实现修改功能\"></a>十. 实现修改功能</h1><p>:::warning<br><strong>需求</strong></p>\n<ol>\n<li><p>点击选中按钮, 将按钮变为选中样式, 并且文本显示删除线</p>\n</li>\n<li><p>再次点击选中按钮时, 将按钮变为未选中样式, 并且文本正常显示(没有删除线)<br>:::</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>思路</p></blockquote>\n</li>\n<li><p>切换样式</p>\n<ol>\n<li>动态绑定样式</li>\n</ol>\n</li>\n<li><p>在点击单选按钮时, 发送请求, 操作数据库</p>\n</li>\n</ol>\n<p><a name=\"BdYMz\"></a></p>\n<h2 id=\"1-实现子组件的双向绑定\"><a href=\"#1-实现子组件的双向绑定\" class=\"headerlink\" title=\"1 实现子组件的双向绑定\"></a>1 实现子组件的双向绑定</h2><p>在子组件中</p>\n<ul>\n<li>绑定checkbox的<code>checked</code>属性</li>\n<li>监听checkbox的<code>change</code>方法</li>\n</ul>\n<p><a name=\"vQtUN\"></a></p>\n<h3 id=\"1-template部分\"><a href=\"#1-template部分\" class=\"headerlink\" title=\"1) template部分\"></a>1) template部分</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div class&#x3D;&quot;todo-item&quot;&gt;\n    &lt;!-- 实现checkbox的双向绑定 --&gt;\n    &lt;!-- 实现自定义v-model --&gt;\n    &lt;input type&#x3D;&quot;checkbox&quot; :checked&#x3D;&quot;todo.completed&quot; @change&#x3D;&quot;handleChange&quot; &#x2F;&gt;\n    &lt;label&gt;&#123;&#123; todo.content &#125;&#125;&lt;&#x2F;label&gt;\n    &lt;button&gt;&lt;&#x2F;button&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n<p><a name=\"ORs6U\"></a></p>\n<h3 id=\"2-methods部分\"><a href=\"#2-methods部分\" class=\"headerlink\" title=\"2) methods部分\"></a>2) methods部分</h3><p>实现<code>handleChange</code>方法<br />在该方法中</p>\n<ul>\n<li>触发自定义的事件<code>toggle</code></li>\n<li>将当前修改 的<code>todo</code>项的id传递给父组件<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">methods: &#123;\n  handleChange() &#123;\n    &#x2F;&#x2F; 触发自定义事件. 提交给父组件处理\n    &#x2F;&#x2F; 应用到的核心技术点: 子组件-&gt;父组件传值\n    this.$emit(&#39;toggle&#39;, this.todo.id)\n  &#125;,\n&#125;,</code></pre>\n:::info<br>原因</li>\n</ul>\n<ol>\n<li><p>子组件的状态是由父组件维护的. 需要在父组件中统一的发送请求</p>\n</li>\n<li><p>在Vue中数据流是单向的. 只能由父组件传递给子组件, 不能反过来<br>:::<br><a name=\"BCIN7\"></a></p>\n<h2 id=\"2-实现父组件监听自定义事件\"><a href=\"#2-实现父组件监听自定义事件\" class=\"headerlink\" title=\"2 实现父组件监听自定义事件\"></a>2 实现父组件监听自定义事件</h2><p><a name=\"OS7h2\"></a></p>\n<h3 id=\"1-template部分-1\"><a href=\"#1-template部分-1\" class=\"headerlink\" title=\"1) template部分\"></a>1) template部分</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;todo-item\n  v-for&#x3D;&quot;item in todos&quot;\n  :key&#x3D;&quot;item.id&quot;\n  :todo&#x3D;&quot;item&quot;\n  @toggle&#x3D;&quot;handleToggle&quot;\n&gt;&lt;&#x2F;todo-item&gt;</code></pre>\n<p><a name=\"xZ3s9\"></a></p>\n<h3 id=\"2-methods部分-1\"><a href=\"#2-methods部分-1\" class=\"headerlink\" title=\"2) methods部分\"></a>2) methods部分</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">handleToggle(id) &#123;\n  &#x2F;&#x2F; console.log(id)\n  &#x2F;&#x2F; 1. 根据id查找对应的todos数组中的对象\n  const data &#x3D; this.todos.find((item) &#x3D;&gt; item.id &#x3D;&#x3D; id)\n  &#x2F;&#x2F; console.log(data)\n\n  &#x2F;&#x2F; 2. 更新该对象的completed的值.\n  data.completed &#x3D;&#x3D; 0 ? (data.completed &#x3D; 1) : (data.completed &#x3D; 0)\n\n  &#x2F;&#x2F; 调用put接口,\n  &#x2F;&#x2F; 发送ajax请求\n  this.$http.put(&#96;http:&#x2F;&#x2F;localhost:3000&#x2F;todos&#x2F;$&#123;id&#125;&#96;, data).then((res) &#x3D;&gt; &#123;\n    const &#123; code, message, result &#125; &#x3D; res.data\n\n    if (code &#x3D;&#x3D; 0) &#123;\n      &#x2F;&#x2F; 数据更新成功, 重新获取数据\n      this.getTodos()\n    &#125;\n  &#125;)\n&#125;,</code></pre></li>\n<li><p>根据id查找<code>todos</code>数组中对应的对象</p>\n</li>\n<li><p>更新该对象的completed的值</p>\n</li>\n<li><p>调用put接口, 发送请求(PUT /todos/:id, {content: ‘’, completed: 1}</p>\n</li>\n</ol>\n<p><a name=\"SAKvN\"></a></p>\n<h2 id=\"3-实现动态样式\"><a href=\"#3-实现动态样式\" class=\"headerlink\" title=\"3 实现动态样式\"></a>3 实现动态样式</h2><p><a name=\"dO6B9\"></a></p>\n<h3 id=\"1-动态绑定div元素样式\"><a href=\"#1-动态绑定div元素样式\" class=\"headerlink\" title=\"1) 动态绑定div元素样式\"></a>1) 动态绑定div元素样式</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div :class&#x3D;&quot;[&#39;todo-item&#39;, todo.completed ? &#39;todo-completed&#39; : &#39;&#39;]&quot;&gt;\n    &lt;!-- 实现checkbox的双向绑定 --&gt;\n    &lt;!-- 实现自定义v-model --&gt;\n    &lt;input type&#x3D;&quot;checkbox&quot; :checked&#x3D;&quot;todo.completed&quot; @change&#x3D;&quot;handleChange&quot; &#x2F;&gt;\n    &lt;input\n      v-if&#x3D;&quot;isEdit&quot;\n      type&#x3D;&quot;text&quot;\n      v-model&#x3D;&quot;todoItem.content&quot;\n      @keyup.enter&#x3D;&quot;handleEdit&quot;\n      @blur&#x3D;&quot;handleEdit&quot;\n    &#x2F;&gt;\n    &lt;label v-else @click&#x3D;&quot;isEdit &#x3D; true&quot;&gt;&#123;&#123; todo.content &#125;&#125;&lt;&#x2F;label&gt;\n    &lt;button&gt;&lt;&#x2F;button&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n<p><a name=\"noHcm\"></a></p>\n<h3 id=\"2-改造样式\"><a href=\"#2-改造样式\" class=\"headerlink\" title=\"2) 改造样式\"></a>2) 改造样式</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;style lang&#x3D;&quot;stylus&quot;&gt;\n@import &#39;~styles&#x2F;theme.styl&#39;\n@import &#39;~styles&#x2F;mixins.styl&#39;\n\n.todo-item\n  display: flex\n  justify-content: space-between\n  align-items: center\n  padding: 10px\n  border-top: 1px solid rgba(0, 0, 0, 0.1)\n  font-size: 24px\n  input\n    clearDefault()\n    &amp;::after\n      content: url(&#39;~images&#x2F;unChecked.svg&#39;)\n    &amp;:checked::after\n      content: url(&#39;~images&#x2F;Checked.svg&#39;)\n  label\n    flex: 1\n    padding-left: 10px\n    transition: all 0.4s\n  button\n    width: 40px\n    height: 40px\n    background-color: transparent\n    clearDefault()\n    cursor: pointer\n  &amp;:hover\n    button::after\n      content: &#39;X&#39;\n      font-size: 24px\n      color: $lightred\n  &amp;.todo-completed\n    label\n      text-decoration: line-through\n      color: #999\n&lt;&#x2F;style&gt;</code></pre>\n<p><a name=\"mERgu\"></a></p>\n<h2 id=\"4-实现内容修改\"><a href=\"#4-实现内容修改\" class=\"headerlink\" title=\"4 实现内容修改\"></a>4 实现内容修改</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>思路: </p></blockquote>\n<ol>\n<li>通过flag标识控制显示<code>label</code>或者<code>input</code><ol>\n<li>当flag=true, 显示label文本</li>\n<li>当flag=false, 显示input框</li>\n</ol>\n</li>\n<li>监听<code>label</code>的双击事件, 切换flag的值, flag=false</li>\n<li>在显示input框时<ol>\n<li>按回车, 更新数据, 触发自定义事件</li>\n<li>失去焦点, 更新数据, 触发自定义事件</li>\n<li>按ESC, 不更新数据<br><a name=\"DSXbv\"></a><h3 id=\"1-改造模板\"><a href=\"#1-改造模板\" class=\"headerlink\" title=\"1) 改造模板\"></a>1) 改造模板</h3><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&lt;label v-if&#x3D;&quot;flag&quot;&gt;&#123;&#123; todo.content &#125;&#125;&lt;&#x2F;label&gt;\n&lt;input v-else type&#x3D;&quot;text&quot; &#x2F;&gt;</code></pre>\n在<code>data</code>中声明flag<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">data() &#123;\n  return &#123;\n    flag: true,\n  &#125;\n&#125;,</code></pre>\n<a name=\"vU3YZ\"></a><h3 id=\"2-监听双击事件\"><a href=\"#2-监听双击事件\" class=\"headerlink\" title=\"2) 监听双击事件\"></a>2) 监听双击事件</h3>双击<code>label</code>时, 切换成input框<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;label v-if&#x3D;&quot;flag&quot; @dblclick&#x3D;&quot;flag &#x3D; false&quot;&gt;&#123;&#123; todo.content &#125;&#125;&lt;&#x2F;label&gt;\n&lt;input v-else type&#x3D;&quot;text&quot; &#x2F;&gt;</code></pre>\n在input框中回显数据<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;label v-if&#x3D;&quot;flag&quot; @dblclick&#x3D;&quot;flag &#x3D; false&quot;&gt;&#123;&#123; todo.content &#125;&#125;&lt;&#x2F;label&gt;\n&lt;input v-else type&#x3D;&quot;text&quot; :value&#x3D;&quot;todo.content&quot; &#x2F;&gt;</code></pre>\n<a name=\"hlnMe\"></a><h3 id=\"3-监听input框的事件\"><a href=\"#3-监听input框的事件\" class=\"headerlink\" title=\"3) 监听input框的事件\"></a>3) 监听input框的事件</h3>监听<code>keyup.enter</code>事件和<code>blur</code>事件<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;input\n  v-else\n  type&#x3D;&quot;text&quot;\n  :value&#x3D;&quot;todo.content&quot;\n  @keyup.enter&#x3D;&quot;handleUpdate&quot;\n  @blur&#x3D;&quot;handleUpdate&quot;\n&#x2F;&gt;</code></pre>\n在<code>methods</code>中定义<code>handleUpdate</code>事件<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">handleUpdate(e) &#123;\n  &#x2F;&#x2F; 1. 获取新输入的value值\n  &#x2F;&#x2F; 2. 向父组件传id, value值\n  &#x2F;&#x2F; 3. 修改flag的状态为true, 变成label文本\n  this.$emit(&#39;change&#39;, this.todo.id, e.target.value)\n  this.flag &#x3D; true\n&#125;,</code></pre>\n在父组件中, 监听<code>change</code>自定义事件<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;todo-item\n  v-for&#x3D;&quot;item in todos&quot;\n  :key&#x3D;&quot;item.id&quot;\n  :todo&#x3D;&quot;item&quot;\n  @toggle&#x3D;&quot;handleToggle&quot;\n  @change&#x3D;&quot;handleChange&quot;\n&gt;&lt;&#x2F;todo-item&gt;</code></pre>\n在父组件中, 定义methods<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">handleChange(id, content) &#123;\n  &#x2F;&#x2F; 1. 根据id查找需要修改的todo对象\n  const todo &#x3D; this.todos.find((item) &#x3D;&gt; item.id &#x3D;&#x3D; id)\n  &#x2F;&#x2F; 2. 更新todo对象的content的值\n  todo.content &#x3D; content\n\n  &#x2F;&#x2F; 3. 发送ajax请求, 调用put接口更新\n  this.$http.put(&#39;http:&#x2F;&#x2F;localhost:3000&#x2F;todos&#x2F;&#39; + id, todo).then((res) &#x3D;&gt; &#123;\n    const &#123; code, message, result &#125; &#x3D; res.data\n    if (code &#x3D;&#x3D; 0) &#123;\n      this.getData()\n    &#125;\n  &#125;)\n&#125;,</code></pre>\n<a name=\"TRlO2\"></a><h3 id=\"4-实现自动获得焦点\"><a href=\"#4-实现自动获得焦点\" class=\"headerlink\" title=\"4) 实现自动获得焦点\"></a>4) 实现自动获得焦点</h3>使用自定义指令<code>v-todo-focus</code>,在模板部分使用指令<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;input\n  v-else\n  v-todo-focus\n  type&#x3D;&quot;text&quot;\n  :value&#x3D;&quot;todo.content&quot;\n  @keyup.enter&#x3D;&quot;handleUpdate&quot;\n  @blur&#x3D;&quot;handleUpdate&quot;\n&#x2F;&gt;</code></pre>\n在配置选项中, 实现自定义指令<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 自定义指令\ndirectives: &#123;\n  &#39;todo-focus&#39;: &#123;\n    inserted: function (el) &#123;\n      el.focus()\n    &#125;,\n  &#125;,\n&#125;,</code></pre>\n<a name=\"uEUch\"></a><h3 id=\"5-按Esc键取消编辑\"><a href=\"#5-按Esc键取消编辑\" class=\"headerlink\" title=\"5) 按Esc键取消编辑\"></a>5) 按Esc键取消编辑</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;input\n  v-else\n  v-todo-focus\n  type&#x3D;&quot;text&quot;\n  :value&#x3D;&quot;todo.content&quot;\n  @keyup.enter&#x3D;&quot;handleUpdate&quot;\n  @keyup.esc&#x3D;&quot;handleCancel&quot;\n  @blur&#x3D;&quot;handleUpdate&quot;\n&#x2F;&gt;</code></pre>\n在methods中实现<code>handleCancel</code><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">handleCancel() &#123;\n  this.flag &#x3D; true\n&#125;,</code></pre>\n改造逻辑, 当falg=false时, 才发送请求<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">handleUpdate(e) &#123;\n  &#x2F;&#x2F; 1. 获取新输入的value值\n  &#x2F;&#x2F; 2. 向父组件传id, value值\n  &#x2F;&#x2F; 3. 修改flag的状态为true, 变成label文本\n  if (this.flag &#x3D;&#x3D; false) &#123;\n    this.$emit(&#39;change&#39;, this.todo.id, e.target.value)\n    this.flag &#x3D; true\n  &#125;\n&#125;,</code></pre>\n<a name=\"D4cu4\"></a><h1 id=\"十一-实现删除功能\"><a href=\"#十一-实现删除功能\" class=\"headerlink\" title=\"十一. 实现删除功能\"></a>十一. 实现删除功能</h1>:::warning</li>\n</ol>\n</li>\n</ol>\n<p><strong>需求</strong></p>\n<ol>\n<li><p>点击删除按钮时, 删除这条待办记录<br>:::</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>思路</p></blockquote>\n</li>\n<li><p>子组件的button触发点击事件, 向父组件提交一个自定义事件<code>del</code></p>\n</li>\n<li><p>父组件监听自定义<code>del</code>事件, 拿到子组件传递过来的<code>id</code>值</p>\n</li>\n<li><p>调用接口, 删除数据</p>\n</li>\n</ol>\n<p><a name=\"tereZ\"></a></p>\n<h2 id=\"1-实现子组件触发自定义事件\"><a href=\"#1-实现子组件触发自定义事件\" class=\"headerlink\" title=\"1 实现子组件触发自定义事件\"></a>1 实现子组件触发自定义事件</h2><p><a name=\"qfDbi\"></a></p>\n<h3 id=\"1-template部分-2\"><a href=\"#1-template部分-2\" class=\"headerlink\" title=\"1) template部分\"></a>1) template部分</h3><p>在子组件模板中, 监听button的点击事件</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;button @click&#x3D;&quot;handleClick&quot;&gt;&lt;&#x2F;button&gt;</code></pre>\n<p><a name=\"oSkJS\"></a></p>\n<h3 id=\"2-script部分\"><a href=\"#2-script部分\" class=\"headerlink\" title=\"2) script部分\"></a>2) script部分</h3><p>在<code>methods</code>中编写<code>handleClick</code>方法, 提交(触发)自定义事件<code>del</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">methods: &#123;\n  handleClick() &#123;\n    &#x2F;&#x2F; 触发自定义事件&#39;del&#39;\n    this.$emit(&#39;del&#39;, this.todo.id)\n  &#125;,\n&#125;,</code></pre>\n<p><a name=\"zlrbb\"></a></p>\n<h2 id=\"2-实现父组件监听自定义事件-1\"><a href=\"#2-实现父组件监听自定义事件-1\" class=\"headerlink\" title=\"2 实现父组件监听自定义事件\"></a>2 实现父组件监听自定义事件</h2><p><a name=\"x21ny\"></a></p>\n<h3 id=\"1-template部分-3\"><a href=\"#1-template部分-3\" class=\"headerlink\" title=\"1) template部分\"></a>1) template部分</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;todo-item\n  v-for&#x3D;&quot;item in todos&quot;\n  :key&#x3D;&quot;item.id&quot;\n  :todo&#x3D;&quot;item&quot;\n  @toggle&#x3D;&quot;handleToggle&quot;\n  @edit&#x3D;&quot;handleEdit&quot;\n  @del&#x3D;&quot;handleDel&quot;\n&gt;&lt;&#x2F;todo-item&gt;</code></pre>\n<p><a name=\"iowyS\"></a></p>\n<h3 id=\"2-script部分-1\"><a href=\"#2-script部分-1\" class=\"headerlink\" title=\"2) script部分\"></a>2) script部分</h3><p>在父组件的<code>methods</code>中, 编写<code>handleDel</code>方法, 调用<code>DELETE /todos/:id</code>接口, 操作数据库</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">handleDel(id) &#123;\n  &#x2F;&#x2F; 调用接口 DELETE &#x2F;todos&#x2F;:id\n  &#x2F;&#x2F; 发送请求\n  this.$http.delete(&#96;http:&#x2F;&#x2F;localhost:3000&#x2F;todos&#x2F;$&#123;id&#125;&#96;).then((res) &#x3D;&gt; &#123;\n    const &#123; code, message, result &#125; &#x3D; res.data\n\n    if (code &#x3D;&#x3D; 0) &#123;\n      this.getTodos()\n    &#125;\n  &#125;)\n&#125;,</code></pre>\n<p><a name=\"o0DsY\"></a></p>\n<h1 id=\"十二-实现TodoInfo组件\"><a href=\"#十二-实现TodoInfo组件\" class=\"headerlink\" title=\"十二. 实现TodoInfo组件\"></a>十二. 实现TodoInfo组件</h1><p><a name=\"j6po5\"></a></p>\n<h2 id=\"1-页面\"><a href=\"#1-页面\" class=\"headerlink\" title=\"1 页面\"></a>1 页面</h2><p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/image-20211207111315081.png\"><br />页面组成</p>\n<ul>\n<li>总计</li>\n<li>tab选项卡</li>\n<li>清除按钮</li>\n</ul>\n<p>初步编写结构</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div class&#x3D;&quot;todo-info&quot;&gt;\n    &lt;span&gt;1 items left&lt;&#x2F;span&gt;\n    &lt;div class&#x3D;&quot;tab&quot;&gt;\n      &lt;a href&#x3D;&quot;#&quot;&gt;all&lt;&#x2F;a&gt;\n      &lt;a href&#x3D;&quot;#&quot;&gt;active&lt;&#x2F;a&gt;\n      &lt;a href&#x3D;&quot;#&quot;&gt;completed&lt;&#x2F;a&gt;\n    &lt;&#x2F;div&gt;\n    &lt;button&gt;Clear Completed&lt;&#x2F;button&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n<p><a name=\"zakcH\"></a></p>\n<h3 id=\"1-template部分-4\"><a href=\"#1-template部分-4\" class=\"headerlink\" title=\"1) template部分\"></a>1) template部分</h3><p>将template使用<code>v-for</code>指令, 列表渲染</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div class&#x3D;&quot;todo-info&quot;&gt;\n    &lt;span&gt;1 items left&lt;&#x2F;span&gt;\n    &lt;div class&#x3D;&quot;tab&quot;&gt;\n      &lt;a href&#x3D;&quot;#&quot; v-for&#x3D;&quot;(state, index) in states&quot; :key&#x3D;&quot;index&quot;&gt;&#123;&#123; state &#125;&#125;&lt;&#x2F;a&gt;\n    &lt;&#x2F;div&gt;\n    &lt;button&gt;Clear Completed&lt;&#x2F;button&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n<p><a name=\"xqQrt\"></a></p>\n<h3 id=\"2-script部分-2\"><a href=\"#2-script部分-2\" class=\"headerlink\" title=\"2) script部分\"></a>2) script部分</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script&gt;\nexport default &#123;\n  name: &#39;TodoInfo&#39;,\n  data() &#123;\n    return &#123;\n      states: [&#39;all&#39;, &#39;active&#39;, &#39;completed&#39;],\n    &#125;\n  &#125;,\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n<p><a name=\"jwZYv\"></a></p>\n<h2 id=\"2-样式\"><a href=\"#2-样式\" class=\"headerlink\" title=\"2 样式\"></a>2 样式</h2><p><a name=\"gZWSw\"></a></p>\n<h3 id=\"1-初步实现\"><a href=\"#1-初步实现\" class=\"headerlink\" title=\"1) 初步实现\"></a>1) 初步实现</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;style lang&#x3D;&quot;stylus&quot;&gt;\n@import &#39;~styles&#x2F;theme.styl&#39;\n\n.todo-info\n  display: flex\n  justify-content: space-between\n  align-items: center\n  height: 30px\n  padding: 5px 10px\n  border-top: 1px solid rgba(0, 0, 0, 0.1)\n  .total\n    color: $red\n  .tab\n    display: flex\n    justify-content: space-between\n    width: 200px\n    a\n      padding: 5px 10px\n      border: 1px solid $lightred\n      color: #000\n      text-decoration: none\n      border-radius: 5px\n      &amp;.current\n        background-color: $lightred\n        color: #fff\n  button\n    padding: 5px 10px\n    height: 30px\n    background-color: $green\n    color: #fff\n    outline: none\n    border: none\n    border-radius: 5px\n&lt;&#x2F;style&gt;</code></pre>\n<p><a name=\"P85Zj\"></a></p>\n<h3 id=\"2-优化\"><a href=\"#2-优化\" class=\"headerlink\" title=\"2) 优化\"></a>2) 优化</h3><p>将比较常用的样式封装成<code>mixins</code><br />在<code>styles</code>下修改<code>mixins.styl</code><br />封装btn函数</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">btn(color, border &#x3D; false)\n  padding: 5px 10px\n  border-radius: 5px\n  outline: none\n  border: none\n  cursor: pointer\n  if (border &#x3D;&#x3D; true)\n    border: 1px solid color\n  else\n    background-color: color\n    color: #fff\n\nprimaryBtn()\n  btn(rgb(252, 157, 154))\n\nprimaryBorderBtn()\n  btn(rgb(252, 157, 154), true)\n\ninfoBtn()\n  btn(rgb(131, 175, 155))</code></pre>\n<p>在组件中. 改造<br />template</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;template&gt;\n  &lt;div class&#x3D;&quot;todo-info&quot;&gt;\n    &lt;span class&#x3D;&quot;total&quot;&gt;1 items left&lt;&#x2F;span&gt;\n    &lt;div class&#x3D;&quot;tab&quot;&gt;\n      &lt;a\n        class&#x3D;&quot;btn primary border&quot;\n        v-for&#x3D;&quot;(state, index) in states&quot;\n        :key&#x3D;&quot;index&quot;\n      &gt;\n        &#123;&#123; state &#125;&#125;\n      &lt;&#x2F;a&gt;\n    &lt;&#x2F;div&gt;\n    &lt;button class&#x3D;&quot;btn info&quot;&gt;Clear Completed&lt;&#x2F;button&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;</code></pre>\n<p>style部分</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;style lang&#x3D;&quot;stylus&quot;&gt;\n@import &#39;~styles&#x2F;theme.styl&#39;\n@import &#39;~styles&#x2F;mixins.styl&#39;\n\n.todo-info\n  display: flex\n  justify-content: space-between\n  align-items: center\n  height: 30px\n  padding: 5px 10px\n  border-top: 1px solid rgba(0, 0, 0, 0.1)\n  .total\n    color: $red\n  .tab\n    display: flex\n    justify-content: space-between\n    width: 200px\n    .btn.primary.border\n      primaryBorderBtn()\n      &amp;.current\n        primaryBtn()\n  .btn.info\n    infoBtn()\n&lt;&#x2F;style&gt;</code></pre>\n<p><a name=\"qoAey\"></a></p>\n<h2 id=\"3-逻辑\"><a href=\"#3-逻辑\" class=\"headerlink\" title=\"3 逻辑\"></a>3 逻辑</h2><p>:::warning<br><strong>需求</strong></p>\n<ol>\n<li>统计功能</li>\n<li>tab切换显示不同状态的待办事项</li>\n<li>清除已完成<br>:::<br><a name=\"LQyvT\"></a><h3 id=\"1-统计功能\"><a href=\"#1-统计功能\" class=\"headerlink\" title=\"1) 统计功能\"></a>1) 统计功能</h3>实时统计剩余的未完成的记录数</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>思路</p></blockquote>\n<ol>\n<li>定义一个计算属性, 计算出<code>completed==0</code>的记录数</li>\n<li>数据是父组件管理, 数据的显示在子组件, 父组件向子组件传参</li>\n</ol>\n<p><a name=\"Qq3O9\"></a></p>\n<h4 id=\"实现计算属性\"><a href=\"#实现计算属性\" class=\"headerlink\" title=\"实现计算属性\"></a>实现计算属性</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">computed: &#123;\n  total() &#123;\n    &#x2F;&#x2F; 根据todos数组, 计算所有&#96;completed&#x3D;&#x3D;0&#96;的个数\n    &#x2F;&#x2F; filter: 过滤出满足条件的元素, 形成一个新数组\n    return this.todos.filter((item) &#x3D;&gt; item.completed &#x3D;&#x3D; 0).length\n  &#125;,\n&#125;,</code></pre>\n<p><a name=\"Wf8iK\"></a></p>\n<h4 id=\"实现父子通信\"><a href=\"#实现父子通信\" class=\"headerlink\" title=\"实现父子通信\"></a>实现父子通信</h4><p>在父组件模板中, 使用自定义属性: <code>total</code>, 绑定父组件中的计算属性</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;todo-info :total&#x3D;&quot;total&quot;&gt;&lt;&#x2F;todo-info&gt;</code></pre>\n<p>在子组件中, 通过<code>props</code>接收, 可子组件模板中使用<br /><strong>script部分</strong></p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script&gt;\nexport default &#123;\n  name: &#39;TodoInfo&#39;,\n  props: &#123;\n    total: &#123;\n      type: Number,\n    &#125;,\n  &#125;,\n  data() &#123;\n    return &#123;\n      states: [&#39;all&#39;, &#39;active&#39;, &#39;completed&#39;],\n    &#125;\n  &#125;,\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n<p><strong>template部分</strong></p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;span class&#x3D;&quot;total&quot;&gt;&#123;&#123; total &#125;&#125; items left&lt;&#x2F;span&gt;</code></pre>\n<p><a name=\"sPEtV\"></a></p>\n<h3 id=\"2-tab栏切换\"><a href=\"#2-tab栏切换\" class=\"headerlink\" title=\"2) tab栏切换\"></a>2) tab栏切换</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>具体需求</p></blockquote>\n<ol>\n<li><p>点击不同的状态, 样式会改变(高亮显示当前的状态)</p>\n</li>\n<li><p>点击不同的状态时, 数据也会发生变化</p>\n<ol>\n<li>点all时, 显示所有的数据</li>\n<li>点active时, 显示所有未完成的记录. (completed = 0)</li>\n<li>点completed时, 显示所有已完成的记录. (completed = 1)<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>思路</p></blockquote>\n</li>\n</ol>\n</li>\n<li><p>子组件的按钮组绑定点击事件, 点击时改变状态</p>\n</li>\n<li><p>状态改变时, 通过触发一个自定义事件<code>toggle</code>,通知父组件</p>\n</li>\n<li><p>父组件监听自定义事件, 计算新数据</p>\n</li>\n</ol>\n<p><a name=\"YZnLq\"></a></p>\n<h4 id=\"实现样式切换\"><a href=\"#实现样式切换\" class=\"headerlink\" title=\"实现样式切换\"></a>实现样式切换</h4><p>TodoInfo组件的template部分</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&lt;a\n  v-for&#x3D;&quot;(state, index) in states&quot;\n  :key&#x3D;&quot;index&quot;\n  class&#x3D;&quot;btn primary border&quot;\n  :class&#x3D;&quot;state &#x3D;&#x3D; current ? &#39;current&#39; : &#39;&#39;&quot;\n  @click&#x3D;&quot;handleClick(state)&quot;\n&gt;</code></pre>\n<p>TodoInfo组件的script部分</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;script&gt;\nexport default &#123;\n  name: &#39;TodoInfo&#39;,\n  props: &#123;\n    total: &#123;\n      type: Number,\n    &#125;,\n  &#125;,\n  data() &#123;\n    return &#123;\n      states: [&#39;all&#39;, &#39;active&#39;, &#39;completed&#39;],\n      current: &#39;all&#39;, &#x2F;&#x2F; 保存当前状态\n    &#125;\n  &#125;,\n  methods: &#123;\n    handleClick(s) &#123;\n      this.current &#x3D; s\n    &#125;,\n  &#125;,\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n<p><a name=\"eM0w0\"></a></p>\n<h4 id=\"实现切换数据显示\"><a href=\"#实现切换数据显示\" class=\"headerlink\" title=\"实现切换数据显示\"></a>实现切换数据显示</h4><p>与此同时, 在TodoInfo组件中<code>handleClick</code>方法中, 触发自定义<code>toggle</code>事件, 将当前点击的状态传递给父组件</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">methods: &#123;\n  handleClick(s) &#123;\n    this.current &#x3D; s\n    &#x2F;&#x2F; 触发自定义事件: toggle\n    this.$emit(&#39;toggle&#39;, s)\n  &#125;,\n&#125;,</code></pre>\n<p>在父组件中, 监听TodoInfo的<code>toggle</code>事件, 改变状态值</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;todo-info :total&#x3D;&quot;total&quot; @toggle&#x3D;&quot;handleChange&quot;&gt;&lt;&#x2F;todo-info&gt;</code></pre>\n<p>编写<code>handleChange</code>方法</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">handleChange(state) &#123;\n  this.state &#x3D; state\n&#125;,</code></pre>\n<p>在<code>data</code>中, 定义<code>state</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">data() &#123;\n  return &#123;\n    todos: [],\n    content: &#39;&#39;,\n    state: &#39;all&#39;,\n  &#125;\n&#125;,</code></pre>\n<p>在父组件中, 设计一个计算属性, 过滤不同状态下的记录</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">computed: &#123;\n  total() &#123;\n    &#x2F;&#x2F; 根据todos数组, 计算所有&#96;completed&#x3D;&#x3D;0&#96;的个数\n    &#x2F;&#x2F; filter: 过滤出满足条件的元素, 形成一个新数组\n    return this.todos.filter((item) &#x3D;&gt; item.completed &#x3D;&#x3D; 0).length\n  &#125;,\n  filterData() &#123;\n    switch (this.state) &#123;\n      case &#39;all&#39;:\n        return this.todos\n      case &#39;active&#39;:\n        return this.todos.filter((item) &#x3D;&gt; item.completed &#x3D;&#x3D; 0)\n      case &#39;completed&#39;:\n        return this.todos.filter((item) &#x3D;&gt; item.completed &#x3D;&#x3D; 1)\n    &#125;\n  &#125;,\n&#125;,</code></pre>\n<p>在父组件模板中, 列表渲染该计算属性<code>filterData</code></p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;todo-item\n  v-for&#x3D;&quot;item in filterData&quot;\n  :key&#x3D;&quot;item.id&quot;\n  :todo&#x3D;&quot;item&quot;\n  @toggle&#x3D;&quot;handleToggle&quot;\n  @edit&#x3D;&quot;handleEdit&quot;\n  @del&#x3D;&quot;handleDel&quot;\n&gt;&lt;&#x2F;todo-item&gt;</code></pre>\n<p><a name=\"rHk2p\"></a></p>\n<h3 id=\"3-清除已完成\"><a href=\"#3-清除已完成\" class=\"headerlink\" title=\"3) 清除已完成\"></a>3) 清除已完成</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>思路</p></blockquote>\n<ol>\n<li>子组件触发自定义事件<code>del</code></li>\n<li>父组件监听事件, 调用<code>删除已完成接口</code></li>\n</ol>\n<p>TodoInfo组件</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;button class&#x3D;&quot;btn info&quot; @click&#x3D;&quot;$emit(&#39;del&#39;)&quot;&gt;Clear Completed&lt;&#x2F;button&gt;</code></pre>\n<p>MainTodo组件<br /><strong>template部分</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&lt;todo-info\n  :total&#x3D;&quot;total&quot;\n  @toggle&#x3D;&quot;handleChange&quot;\n  @del&#x3D;&quot;handleDelCompleted&quot;\n&gt;&lt;&#x2F;todo-info&gt;</code></pre>\n<p><strong>script部分</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">handleDelCompleted() &#123;\n  &#x2F;&#x2F; 调用接口(DELETE &#x2F;todos?completed&#x3D;1)\n  this.$http\n    .delete(&#39;http:&#x2F;&#x2F;localhost:3000&#x2F;todos?completed&#x3D;1&#39;)\n    .then((res) &#x3D;&gt; &#123;\n      const &#123; code &#125; &#x3D; res.data\n      if (code &#x3D;&#x3D; 0) &#123;\n        this.getTodos()\n      &#125;\n    &#125;)\n&#125;,</code></pre>\n<p>在后端提供接口</p>\n<pre class=\"line-numbers language-http\" data-language=\"http\"><code class=\"language-http\">DELETE &#x2F;todos?completed&#x3D;1</code></pre>\n<p>在<code>todos.js</code>路由文件中, 编写处理函数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;**\n * 删除指定项\n * Delete &#x2F;todos?completed&#x3D;1\n *&#x2F;\nrouter.delete(&#39;&#x2F;&#39;, async (req, res) &#x3D;&gt; &#123;\n  &#x2F;&#x2F; 解析queryString\n  const &#123; completed &#125; &#x3D; req.query\n  &#x2F;&#x2F; 操作数据库\n  let sql &#x3D; &#96;delete from vue_todos where completed &#x3D; $&#123;completed&#125;&#96;\n  await exec(sql)\n  res.send(&#123;\n    code: 0,\n    message: &#39;删除成功&#39;,\n    result: &#39;&#39;,\n  &#125;)\n&#125;)</code></pre>\n\n<p>流程图参考<br><br /><br><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1664184259733-98a099ea-c23b-4601-8417-c5bd5f4e7c3c.png\" alt=\"vue-todo-勾选功能流程图.png\"><br><br /><br><a href=\"https://www.processon.com/view/link/63316f3307912955b207a0d8\">点击查看【processon】</a></p>\n","text":" 一. 搭建项目 1 使用脚手架搭建项目通过vue create vue-todo创建一个项目 vue create vue-todo 2 启动项目进入到项目目录, 执行命令 npm run serve 启动一个内置的调试web server(默认8080) 支持热更新(实时改变...","link":"","photos":[],"count_time":{"symbolsCount":"33k","symbolsTime":"30 mins."},"categories":[{"name":"Vue","slug":"Vue","count":17,"path":"api/categories/Vue.json"}],"tags":[{"name":"Vue2进阶","slug":"Vue2进阶","count":11,"path":"api/tags/Vue2进阶.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80-%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">一. 搭建项目</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E4%BD%BF%E7%94%A8%E8%84%9A%E6%89%8B%E6%9E%B6%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">1 使用脚手架搭建项目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%90%AF%E5%8A%A8%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">2 启动项目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">3 测试</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C-%E9%A1%B9%E7%9B%AE%E5%88%86%E6%9E%90\"><span class=\"toc-text\">二. 项目分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E7%BB%84%E4%BB%B6%E7%9A%84%E6%8B%86%E5%88%86\"><span class=\"toc-text\">1 组件的拆分</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%AE%9E%E7%8E%B0%E6%95%B4%E4%BD%93%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">2 实现整体结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%B8%85%E7%90%86App-vue\"><span class=\"toc-text\">1) 清理App.vue</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%88%9B%E5%BB%BA%E5%AD%90%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">2) 创建子组件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%8C%82%E8%BD%BD%E5%AD%90%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">3) 挂载子组件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%BC%95%E7%94%A8%E5%AD%90%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">4) 引用子组件</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">3 优化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%B0%86%E6%96%87%E4%BB%B6%E6%94%B9%E9%80%A0%E6%88%90%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">1) 将文件改造成目录</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%88%9B%E5%BB%BA%E5%AD%90%E7%BB%84%E4%BB%B6-1\"><span class=\"toc-text\">2) 创建子组件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%AE%8C%E6%88%90%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E6%8C%82%E8%BD%BD\"><span class=\"toc-text\">3) 完成子组件的挂载</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89-%E9%A1%B9%E7%9B%AE%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">三. 项目规范</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E9%85%8D%E8%89%B2%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">1 配色方案</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%AE%89%E8%A3%85%E4%B8%A4%E4%B8%AAvscode%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">2 安装两个vscode插件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%8A%A0%E8%BD%BD%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87\"><span class=\"toc-text\">3. 加载背景图片</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%BC%96%E5%86%99reset%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">1) 编写reset样式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%8A%A0%E8%BD%BD%E5%88%B0%E9%A1%B9%E7%9B%AE%E4%B8%AD\"><span class=\"toc-text\">2) 加载到项目中</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B-%E5%AE%9E%E7%8E%B0MainHeader%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">四. 实现MainHeader组件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E9%A1%B5%E9%9D%A2%E9%83%A8%E5%88%86\"><span class=\"toc-text\">1 页面部分</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%A0%B7%E5%BC%8F%E9%83%A8%E5%88%86\"><span class=\"toc-text\">2 样式部分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">1) 优化</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%94-%E5%88%9D%E6%AD%A5%E5%AE%9E%E7%8E%B0MainTodo%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">五. 初步实现MainTodo组件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6%E7%9A%84%E6%8B%86%E5%88%86\"><span class=\"toc-text\">1 核心组件的拆分</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E9%A1%B5%E9%9D%A2%E9%83%A8%E5%88%86\"><span class=\"toc-text\">2 页面部分</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E6%A0%B7%E5%BC%8F%E9%83%A8%E5%88%86\"><span class=\"toc-text\">3 样式部分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%95%B4%E4%BD%93%E7%9A%84%E7%9B%92%E5%AD%90%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">1) 整体的盒子样式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E8%BE%93%E5%85%A5%E6%A1%86%E7%9A%84%E7%BE%8E%E5%8C%96\"><span class=\"toc-text\">2) 输入框的美化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%95%88%E6%9E%9C%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">3) 效果优化</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%AD-%E5%AE%9E%E7%8E%B0TodoItem%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">六. 实现TodoItem组件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E9%A1%B5%E9%9D%A2%E9%83%A8%E5%88%86-1\"><span class=\"toc-text\">1 页面部分</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%A0%B7%E5%BC%8F%E9%83%A8%E5%88%86-1\"><span class=\"toc-text\">2 样式部分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%95%B4%E4%BD%93%E7%9A%84%E7%9B%92%E5%AD%90%E6%A0%B7%E5%BC%8F-1\"><span class=\"toc-text\">1) 整体的盒子样式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-checkbox%E7%BE%8E%E5%8C%96\"><span class=\"toc-text\">2) checkbox美化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-label%E7%9A%84%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">3) label的设置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-button%E7%9A%84%E7%BE%8E%E5%8C%96\"><span class=\"toc-text\">4) button的美化</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E4%BC%98%E5%8C%96-1\"><span class=\"toc-text\">3 优化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E8%B7%AF%E5%BE%84%E5%88%AB%E5%90%8D\"><span class=\"toc-text\">1) 路径别名</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%BD%BF%E7%94%A8%E5%88%AB%E5%90%8D\"><span class=\"toc-text\">2) 使用别名</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-CSS%E5%A4%8D%E7%94%A8\"><span class=\"toc-text\">3) CSS复用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E9%80%BB%E8%BE%91\"><span class=\"toc-text\">4 逻辑</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">1) 定义数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%B8%B2%E6%9F%93%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">2) 渲染模板</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E7%88%B6%E7%BB%84%E4%BB%B6%E5%90%91%E5%AD%90%E7%BB%84%E4%BB%B6%E4%BC%A0%E5%8F%82\"><span class=\"toc-text\">3) 父组件向子组件传参</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%83-%E5%AE%9E%E7%8E%B0%E5%90%8E%E5%8F%B0%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\">七. 实现后台接口</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%AB-%E5%AE%9E%E7%8E%B0%E5%88%97%E8%A1%A8%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">八. 实现列表功能</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">1 安装插件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">1) 安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2) 配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%B5%8B%E8%AF%95-1\"><span class=\"toc-text\">3) 测试</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E8%B0%83%E7%94%A8%E6%8E%A5%E5%8F%A3%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">2 调用接口获取数据</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B9%9D-%E5%AE%9E%E7%8E%B0%E6%B7%BB%E5%8A%A0%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">九. 实现添加功能</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%AE%9E%E7%8E%B0%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">1) 实现模板</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%A3%B0%E6%98%8E%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">2) 声明变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%A3%B0%E6%98%8E%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">3) 声明方法</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8D%81-%E5%AE%9E%E7%8E%B0%E4%BF%AE%E6%94%B9%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">十. 实现修改功能</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%AE%9E%E7%8E%B0%E5%AD%90%E7%BB%84%E4%BB%B6%E7%9A%84%E5%8F%8C%E5%90%91%E7%BB%91%E5%AE%9A\"><span class=\"toc-text\">1 实现子组件的双向绑定</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-template%E9%83%A8%E5%88%86\"><span class=\"toc-text\">1) template部分</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-methods%E9%83%A8%E5%88%86\"><span class=\"toc-text\">2) methods部分</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%AE%9E%E7%8E%B0%E7%88%B6%E7%BB%84%E4%BB%B6%E7%9B%91%E5%90%AC%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">2 实现父组件监听自定义事件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-template%E9%83%A8%E5%88%86-1\"><span class=\"toc-text\">1) template部分</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-methods%E9%83%A8%E5%88%86-1\"><span class=\"toc-text\">2) methods部分</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">3 实现动态样式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%8A%A8%E6%80%81%E7%BB%91%E5%AE%9Adiv%E5%85%83%E7%B4%A0%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">1) 动态绑定div元素样式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%94%B9%E9%80%A0%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">2) 改造样式</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%AE%9E%E7%8E%B0%E5%86%85%E5%AE%B9%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">4 实现内容修改</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%94%B9%E9%80%A0%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">1) 改造模板</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E7%9B%91%E5%90%AC%E5%8F%8C%E5%87%BB%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">2) 监听双击事件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E7%9B%91%E5%90%ACinput%E6%A1%86%E7%9A%84%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">3) 监听input框的事件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%BE%97%E7%84%A6%E7%82%B9\"><span class=\"toc-text\">4) 实现自动获得焦点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E6%8C%89Esc%E9%94%AE%E5%8F%96%E6%B6%88%E7%BC%96%E8%BE%91\"><span class=\"toc-text\">5) 按Esc键取消编辑</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8D%81%E4%B8%80-%E5%AE%9E%E7%8E%B0%E5%88%A0%E9%99%A4%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">十一. 实现删除功能</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%AE%9E%E7%8E%B0%E5%AD%90%E7%BB%84%E4%BB%B6%E8%A7%A6%E5%8F%91%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">1 实现子组件触发自定义事件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-template%E9%83%A8%E5%88%86-2\"><span class=\"toc-text\">1) template部分</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-script%E9%83%A8%E5%88%86\"><span class=\"toc-text\">2) script部分</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%AE%9E%E7%8E%B0%E7%88%B6%E7%BB%84%E4%BB%B6%E7%9B%91%E5%90%AC%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6-1\"><span class=\"toc-text\">2 实现父组件监听自定义事件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-template%E9%83%A8%E5%88%86-3\"><span class=\"toc-text\">1) template部分</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-script%E9%83%A8%E5%88%86-1\"><span class=\"toc-text\">2) script部分</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8D%81%E4%BA%8C-%E5%AE%9E%E7%8E%B0TodoInfo%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">十二. 实现TodoInfo组件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E9%A1%B5%E9%9D%A2\"><span class=\"toc-text\">1 页面</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-template%E9%83%A8%E5%88%86-4\"><span class=\"toc-text\">1) template部分</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-script%E9%83%A8%E5%88%86-2\"><span class=\"toc-text\">2) script部分</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">2 样式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%88%9D%E6%AD%A5%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">1) 初步实现</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">2) 优化</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E9%80%BB%E8%BE%91\"><span class=\"toc-text\">3 逻辑</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">1) 统计功能</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E8%AE%A1%E7%AE%97%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">实现计算属性</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E7%88%B6%E5%AD%90%E9%80%9A%E4%BF%A1\"><span class=\"toc-text\">实现父子通信</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-tab%E6%A0%8F%E5%88%87%E6%8D%A2\"><span class=\"toc-text\">2) tab栏切换</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E6%A0%B7%E5%BC%8F%E5%88%87%E6%8D%A2\"><span class=\"toc-text\">实现样式切换</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E5%88%87%E6%8D%A2%E6%95%B0%E6%8D%AE%E6%98%BE%E7%A4%BA\"><span class=\"toc-text\">实现切换数据显示</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%B8%85%E9%99%A4%E5%B7%B2%E5%AE%8C%E6%88%90\"><span class=\"toc-text\">3) 清除已完成</span></a></li></ol></li></ol></li></ol>","author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"补充Axios的使用","uid":"64c0c0bccb71428e518fe1fe8d784a6b","slug":"补充.Axios的使用_new","date":"2022-12-02T11:32:58.850Z","updated":"2022-12-02T11:32:58.850Z","comments":true,"path":"api/articles/补充.Axios的使用_new.json","keywords":null,"cover":[],"text":"官方文档 一. 安装npm install axios 安装axios库, 可以在浏览器和node环境使用.主要用于发送HTTP请求, 返回promise对象 get post put delete二. 快速上手1 步骤 引入axios.js 创建axios实例 发送请求2 示例...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"补充","slug":"补充","count":3,"path":"api/categories/补充.json"}],"tags":[{"name":"axios","slug":"axios","count":2,"path":"api/tags/axios.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}},"next_post":{"title":"三. Vue-cli(前端工程化)","uid":"ed6909028b0dfc67b5cabe577cbaa969","slug":"三. Vue-cli(前端工程化)_new","date":"2022-12-02T11:18:45.329Z","updated":"2022-12-02T11:18:45.330Z","comments":true,"path":"api/articles/三. Vue-cli(前端工程化)_new.json","keywords":null,"cover":[],"text":" 1 介绍 1) 什么是Vue-cli Vue项目的构建工具. 2) 作用 2 安装 1) 安装cli工具全局安装cli工具 npm install -g @vue&#x2F;cli 备注 如果, 安装速度比较慢, 尝试切换镜像切换到taobao镜像 &#x2F;&#x2F; 查...","link":"","photos":[],"count_time":{"symbolsCount":361,"symbolsTime":"1 mins."},"categories":[{"name":"Vue","slug":"Vue","count":17,"path":"api/categories/Vue.json"}],"tags":[{"name":"Vue2进阶","slug":"Vue2进阶","count":11,"path":"api/tags/Vue2进阶.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}}}