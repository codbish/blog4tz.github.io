{"title":"08_旋转_动画_flex布局","uid":"e994d58426d1973329baeeb9f5fd4931","slug":"day08_课堂笔记","date":"2022-12-01T11:35:05.354Z","updated":"2022-12-01T11:36:04.248Z","comments":true,"path":"api/articles/day08_课堂笔记.json","keywords":null,"cover":null,"content":"<h4 id=\"昨日回顾\"><a href=\"#昨日回顾\" class=\"headerlink\" title=\"昨日回顾\"></a>昨日回顾</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">定位\n\t概念\n\t\t布局方式,盒子层叠,固定显示\n\t使用\n\t\t定位方式\n\t\t设置偏移值\n\t分类\n\t\t相对定位\n\t\t\t相对于自身\n\t\t\t原点:原来的左上角的位置\n\t\t\t不脱标\n\t\t绝对定位\n\t\t\t相对于最近有定位祖先元素\n\t\t\t原点:定位祖先元素左上角(都没有,就是body左上角)\n\t\t\t脱标\n\t\t固定定位\n\t\t\t相对于body的左上角\n\t\t\t原点:body的左上角\n\t\t\t脱标\n\t应用\n\t\t子绝父相\nvertical-align\n\t概念\n\t\t设置行内元素,行内块元素垂直对齐方式\n\t取值\n\t\tbaseline\n\t\ttop\n\t\tbottom\n\t\tmiddle\n\t应用\n\t\timg撑开div之后,底部有间隙\n\t\timg垂直居中问题(只设置line-height&#x3D;父元素高度不行的)\noverflow\n\t概念\n\t\t控制内容区域超出之后的显示效果\n\t取值\n\t\thidden\n\t\tauto\n元素隐藏\n\tdisplay none 不占位置\n\tvisibility hidden 占位置\n字体图标\n\t本质是字体,用于页面中一些小的标签\n\t使用\n\t\t拖入字体包\n\t\t引入字体样式\n\t\t调用类名去显示</code></pre>\n\n<h4 id=\"CSS新特性\"><a href=\"#CSS新特性\" class=\"headerlink\" title=\"CSS新特性\"></a>CSS新特性</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">过渡\n\t语法\n\t\ttransition: 属性名或者all 过渡时间\n\t注意\n\t\t过渡属性一般写在过渡元素上面\n\t\t\n位移\n\t语法\n\t\ttransform:translateX()  x轴\n\t\ttransform:translateY()  y轴 --- 可能会覆盖上面的\n\t\ttransform:translate(x轴,y轴) --  避免被覆盖\n\t注意\t\n    \t使用百分比,是相对于他自身\n旋转\n\t语法\n\t\ttransform:rotate(angle)\t定义 2D 旋转，在参数中规定角度。\n\t取值\n\t\t正数 顺时针\n\t\t负数 逆时针\n\t\t\n渐变\n\t语法\n\t\tbackground-image:linear-gradient(颜色1,颜色2...) \n\t\t\n\tlinear-gradient() 函数\n\t\t用于创建一个表示两种或多种颜色线性渐变的图片。\n\t\t创建一个线性渐变，需要指定两种颜色，还可以实现不同方向（指定为一个角度）的渐变效果，如\t\t   果不指定方向，默认从上到下渐变。\n\t\t\n动画\n\t语法\n\t\t1,先定义动画\n\t\t\t@keyframes 动画名称&#123;\n\t\t\t\t0%&#123;&#125;&#x2F;&#x2F;开始的状态\n\t\t\t\t100%&#123;&#125;&#x2F;&#x2F;结束的状态\n\t\t\t&#125;\n\t\t2,使用动画\n\t\t\t在需要添加动画的元素上,加一个animation,设置动画的名称 和动画的时长\n\t\t\t\n\t注意\n\t\t动画名称 和 动画持续的时长 必须要赋值</code></pre>\n\n\n\n<h4 id=\"flex布局\"><a href=\"#flex布局\" class=\"headerlink\" title=\"flex布局\"></a>flex布局</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">概念\n\t一种弹性布局方式,他布局页面更加的简单,灵活,避免浮动脱标的影响\n\t\n组成\n\t弹性容器(父元素)\n\t弹性盒子(子元素)\n\t主轴(默认是水平方向,子元素就会默认水平排布)\n\t侧轴&#x2F;交叉轴(默认是垂直方向)\n\t\n使用\n\t1,需要在父元素上添加display:flex属性\n\t2,根据需要添加对应轴的属性来实现布局\n\t\n主轴对齐方式\n\tjustify-content\n\t\tcenter 居中\n\t\tspace-between 两边没有间隙,中间间隙等分\n\t\tspace-around 中间间隙是两边间隙的2倍\n\t\tspace-evenly 所有间隙等分\n\t\t\n侧轴对齐方式\n\talign-items\t\n\t\tcenter 居中\n\t\tstretch 拉伸 默认\n伸缩比\n\t实现子元素宽度不一样\n\tflex:数值 取父元素剩余宽度的份数\n\t\n子级元素的换行显示\n\tflex-wrap:wrap换行\n\t\n换行之后,行的显示方式\n\talign-content\n\t\tcenter 居中\n\t\tspace-between 上下两边没有间隙,中间间隙等分\n\t\tspace-around 中间间隙是上下两边间隙的2倍\n\n修改轴向\n\tflex-direction:column\n\t\n\t修改之后 实现水平对齐 align-items:center\n\t\t    实现垂直对齐 justify-content:center</code></pre>\n\n","text":"昨日回顾定位 概念 布局方式,盒子层叠,固定显示 使用 定位方式 设置偏移值 分类 相对定位 相对于自身 原点:原来的左上角的位置 不脱标 绝对定位 相对于最近有定位祖先元素 原点:定位祖先元素左上角(都没有,就是body左上角) 脱标 固定定位 相对于body的左上角 原点:b...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"前端三剑客","slug":"前端三剑客","count":24,"path":"api/categories/前端三剑客.json"}],"tags":[{"name":"css","slug":"css","count":7,"path":"api/tags/css.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%98%A8%E6%97%A5%E5%9B%9E%E9%A1%BE\"><span class=\"toc-text\">昨日回顾</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#CSS%E6%96%B0%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">CSS新特性</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#flex%E5%B8%83%E5%B1%80\"><span class=\"toc-text\">flex布局</span></a></li></ol>","author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"11_js变量_数据类型_运算符","uid":"8bc067569f8f6351f0ef53903883b0a2","slug":"day11_课堂笔记","date":"2022-12-01T11:48:38.759Z","updated":"2022-12-01T11:50:21.226Z","comments":true,"path":"api/articles/day11_课堂笔记.json","keywords":null,"cover":null,"text":"概念及入门概念 一种运行在客户端的脚本语言(script脚本意思) 作用 表单的动态校验 网页的特效(轮播图) 服务端的开发(nodejs) 桌面程序 控制硬件-物联网 组成 ECMAScript 基础语法 DOM 文档数据模型 BOM 浏览器数据模型 书写方式 1,内嵌式 在h...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"前端三剑客","slug":"前端三剑客","count":24,"path":"api/categories/前端三剑客.json"}],"tags":[{"name":"javascript","slug":"javascript","count":16,"path":"api/tags/javascript.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}},"next_post":{"title":"07_定位_字体图标_新特性","uid":"55ae4994231e43a4884c40522a431107","slug":"day07_课堂笔记","date":"2022-12-01T11:31:32.927Z","updated":"2022-12-01T11:32:06.744Z","comments":true,"path":"api/articles/day07_课堂笔记.json","keywords":null,"cover":null,"text":"昨日回顾伪元素 概念 css模拟生成的一些非主体部分 语法 ::before ::after 注意 content 默认行内元素 伪类选择器 概念 根据元素在html中的结构查询 语法 :first-child :last-child :nth-child(n) 2n+1 2n ...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"前端三剑客","slug":"前端三剑客","count":24,"path":"api/categories/前端三剑客.json"}],"tags":[{"name":"css","slug":"css","count":7,"path":"api/tags/css.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}}}