{"title":"16_事件对象_BOM","uid":"ab2246c1172434c6023a55b8c939a44f","slug":"day16_课堂笔记","date":"2022-12-01T12:09:51.872Z","updated":"2022-12-01T12:10:24.375Z","comments":true,"path":"api/articles/day16_课堂笔记.json","keywords":null,"cover":null,"content":"<h4 id=\"昨日回顾\"><a href=\"#昨日回顾\" class=\"headerlink\" title=\"昨日回顾\"></a>昨日回顾</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">DOM\n\t文档对象模型\n\t\t加载html文件的时候,浏览器将html文档封装成一个树形结构\n\t\tdocument-html-head,body 形成dom树\n\t作用\t\n\t\t定义了如何获取,操作元素属性(样式),添加和删除元素的规范\n\t思想\n\t\t把html页面中的各个组成部分,抽成对象,以面向对象的方式来操作\n获取元素\n\t获取单个\n\t\tdocument.getElementById()\n\t\tdocument.querySelector(选择器)\n\t获取多个\n\t\tdocument.getElementsByTagName()\n\t\tdocument.getElementsByClassName()\n\t\tdocument.querySelectorAll(选择器)\n操作元素\n\t1,操作属性\n\t\t设置\n\t\t\t元素对象.属性名 &#x3D; 属性值\n\t\t获取\n\t\t\t元素对象.属性名\n\t2,操作标签体\n\t\t设置\n\t\t\t元素对象.innerHTML &#x3D; 属性值\n\t\t获取\n\t\t\t元素对象.innerHTML\n\t3,操作样式\n\t\t单独设置\n\t\t\t元素对象.style.属性名 &#x3D; 属性值\n\t\t批量设置\n\t\t\t元素对象.className &#x3D; class值\n事件\n\t三个要素\n\t\t事件源\n\t\t事件\n\t\t事件处理程序\n\t三个步骤\n\t\t写一个事件源\n\t\t写一个监听器\n\t\t绑定事件源和监听器\n\t常见事件\n\t\t点击事件\n\t\t\tonclick</code></pre>\n\n\n\n<h4 id=\"节点操作\"><a href=\"#节点操作\" class=\"headerlink\" title=\"节点操作\"></a>节点操作</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">概念\n\t在 HTML DOM (Document Object Model) 中 , 每一个元素都是 节点:\n\n    文档是一个文档节点。\n    所有的HTML元素都是元素节点。\n    所有 HTML 属性都是属性节点。\n    文本插入到 HTML 元素是文本节点\n    注释是注释节点。\n    \n操作\n\t创建元素节点\n\t\tdocument.createElement() 创建元素节点。\n\t添加节点\n\t\telement.appendChild()\t为元素添加一个新的子元素\n\t\telement.insertBefore()\t现有的子元素之前插入一个新的子元素\n\t删除节点\n\t\telement.removeChild()\t删除一个子元素</code></pre>\n\n\n\n<h4 id=\"其他事件\"><a href=\"#其他事件\" class=\"headerlink\" title=\"其他事件\"></a>其他事件</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">点击事件\n\tonclick\n焦点事件\n\t获取焦点 onfocus\n\t失去焦点 onblur\n鼠标移入移出事件\n\tonmouseover\t鼠标移到某元素之上。\n\tonmouseout\t鼠标从某元素移开。</code></pre>\n\n\n\n<h4 id=\"事件对象\"><a href=\"#事件对象\" class=\"headerlink\" title=\"事件对象\"></a>事件对象</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">概念\n\t事件发生之后,跟事件相关的一系列信息数据的集合都会被放到这个对象中,这个对象就是事件对象\n\t比如\n\t\t1,谁绑定了这个事件\n\t\t2,如果是鼠标触发事件,可以得到鼠标相关信息,比如鼠标的位置\n\t\t3,如果是键盘触发事件,可以得到键盘相关信息,比如按了那个键\n获取\n\t事件触发的时候就会产生事件对象,并且系统会以实参的形式传递给事件处理函数\n\t我们可以在事件处理函数中声明一个参数来接收事件对象\n\n作用\n\t1,可以获取当前事件的类型(e.type)\n\t2,在键盘事件中可以获取按了哪个键(e.keycode)\n\t3,可以阻止某些标签的默认行为(e.preventDefault())\n\t4,可以获取具体点击了哪一个子元素(e.target)\n\t5,可以阻止事件冒泡(e.stopPropagation())\n\t\n事件冒泡\n\t由于事件有传递性的,最开始是由最具体的元素接收,然后逐级向上传播到DOM的最顶层节点\n阻止事件冒泡\n\t有些情况下,我们只想让最具体的元素接收,而不想让事件向上传播,就可以使用e.stopPropagation()阻止事件冒泡</code></pre>\n\n\n\n<h4 id=\"BOM简介\"><a href=\"#BOM简介\" class=\"headerlink\" title=\"BOM简介\"></a>BOM简介</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">概念\n\t浏览器对象模型(Browser Object Model)\n作用\n\t使 JavaScript 有能力与浏览器&quot;对话&quot;。(操作浏览器)\n\t例如:弹框,新建一个窗口,跳转到其他窗口,实现定时操作\n组成\n\twindow\n\t\t窗口对象  表示浏览器窗口\n\tscreen \n\t\t屏幕对象  包含有关用户屏幕的信息\n\tlocation \n\t\t地址栏对象 用于获得当前页面的地址 (URL)，并把浏览器重定向到新的页面。\n\thistory \n\t\t历史记录对象  包含浏览器的历史。\n\tnavigator \n\t\t浏览器对象   包含有关访问者浏览器的信息\n操作思想\n\t将浏览器的各个组成部分抽成对象,以面向对象的方式来操作(对象有属性和方法),提高开发效率</code></pre>\n\n\n\n<h4 id=\"window对象\"><a href=\"#window对象\" class=\"headerlink\" title=\"window对象\"></a>window对象</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">概念\n\t窗口对象\n\t包含页面中的很多东西(变量,函数,弹框,document等)\n方法\n\t定时一次\n\t\tsetTimeOut() 清除clearTimeout()\n\t循环定时\n\t\tsetinterval() 清除clearInterval()</code></pre>\n\n\n\n<h4 id=\"location对象\"><a href=\"#location对象\" class=\"headerlink\" title=\"location对象\"></a>location对象</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">概念\n\t地址栏对象,可以实现刷新和跳转\n属性\n\t href\n     \t设置\n     \t\tlocation.href &#x3D; 新的地址\n\t\t获取\n\t\t\tlocation.href   返回完整的url地址\n\n方法         \n\treload()  刷新</code></pre>\n\n","text":"昨日回顾DOM 文档对象模型 加载html文件的时候,浏览器将html文档封装成一个树形结构 document-html-head,body 形成dom树 作用 定义了如何获取,操作元素属性(样式),添加和删除元素的规范 思想 把html页面中的各个组成部分,抽成对象,以面向对象...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"前端三剑客","slug":"前端三剑客","count":24,"path":"api/categories/前端三剑客.json"}],"tags":[{"name":"javascript","slug":"javascript","count":16,"path":"api/tags/javascript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%98%A8%E6%97%A5%E5%9B%9E%E9%A1%BE\"><span class=\"toc-text\">昨日回顾</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">节点操作</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E4%BA%8B%E4%BB%B6\"><span class=\"toc-text\">其他事件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E4%BB%B6%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">事件对象</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#BOM%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">BOM简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#window%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">window对象</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#location%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">location对象</span></a></li></ol>","author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"17_juery基础语法_选择器","uid":"fbfddebc2434ce626b9f5720fcc8dd42","slug":"day17_课堂笔记","date":"2022-12-01T12:11:52.967Z","updated":"2022-12-01T12:12:33.968Z","comments":true,"path":"api/articles/day17_课堂笔记.json","keywords":null,"cover":null,"text":"JS回顾DOM 概念 文档对象模型,定义了查找,新增,修改,删除元素的标准 获取 querySelector() querySelectorAll() 操作元素 操作属性 元素对象.属性名 操作标签体 元素对象.innerHTML 操作样式 元素对象.style.样式属性名(单独...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"前端三剑客","slug":"前端三剑客","count":24,"path":"api/categories/前端三剑客.json"}],"tags":[{"name":"javascript","slug":"javascript","count":16,"path":"api/tags/javascript.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}},"next_post":{"title":"15_DOM概念_事件_操作元素","uid":"1a1853128f85ed795b64680874636106","slug":"day15_课程笔记","date":"2022-12-01T12:08:50.709Z","updated":"2022-12-01T12:09:30.868Z","comments":true,"path":"api/articles/day15_课程笔记.json","keywords":null,"cover":null,"text":"昨日回顾面向对象 类和对象 内存执行情况 内置类(自带的类) Math类 PI max() min() abs() ceil() floor() round() random() Math.floor(Math.random()*[max-min+1])+min Date类 ne...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"前端三剑客","slug":"前端三剑客","count":24,"path":"api/categories/前端三剑客.json"}],"tags":[{"name":"javascript","slug":"javascript","count":16,"path":"api/tags/javascript.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}}}