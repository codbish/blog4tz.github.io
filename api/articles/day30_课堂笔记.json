{"title":"30_用户管理系统后台实现及前台查询所有","uid":"dec91e97c264ed31b95d6e5abfa5eeb8","slug":"day30_课堂笔记","date":"2022-12-01T14:07:10.846Z","updated":"2022-12-02T06:07:38.823Z","comments":true,"path":"api/articles/day30_课堂笔记.json","keywords":null,"cover":null,"content":"<h4 id=\"昨日回顾\"><a href=\"#昨日回顾\" class=\"headerlink\" title=\"昨日回顾\"></a>昨日回顾</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">改造了express后台的增删改查\n\t一,使用数组实现\n\t\t弊端\n\t\t\t数据不能持久存储,只是在内存中存储\n\t二,中间件优化\n\t\t1,优化处理请求体\n\t\t\tapp.use(express.json())\n\t\t\tapp.use(express.urlencoded())\n\t\t2,处理跨域请求\n\t\t\tapp.use(cors())\n\t三,数据库实现\n\t\t好处\n\t\t\t可以让数据持久化的存在文件中\n\t\t步骤\n\t\t\t1,导包,创建连接,连接数据库\n\t\t\t2,在路由(处理函数)中\n\t\t\t\t1,获取请求参数\n\t\t\t\t2,编写sql语句\n\t\t\t\t3,执行sql语句返回数据\n\t四,抽取数据库代码\n\t\t目的\n\t\t\t将业务逻辑代码和处理数据库的代码剥离出去\n\t\t\t方便后期维护,实现数据库代码的重用\n\t\t步骤\n\t\t\t把关于数据库的操作单独放在一个js文件中(对query这个方法进行了封装)\n\t\t\t\t1,导包,创建连接,连接数据库剪切到一个文件中\n\t\t\t\t2,提供查询所有getAll(),查询一个getByid(),增删改exec()\n\t\t\t\t3,这些方法都返回一个promise对象,异常通过reject返回,数据通过resolve返回\n\t\t\t\t4,导出方法\n\t五,用es7语法糖简化异步的调用\n\t\t目的\n\t\t\t简化代码,提高开发效率\n\t\t做法\n\t\t\t1,调用数据库方法的前面加上await关键字,就可以获取then方法执行的结果\n\t\t\t2,由于await只能放在异步函数中,在外面的处理函数前面加上async关键字\n\t六,修改数据库操作的文件的文件名和所在文件夹\n\t\t一般将文件名修改为index.js,将来不可以写文件名,默认会加载index.js\n\t\t一般将数据库操作的文件放在db文件夹下,将来方便程序员去维护</code></pre>\n\n<h4 id=\"express集成nodemon\"><a href=\"#express集成nodemon\" class=\"headerlink\" title=\"express集成nodemon\"></a>express集成nodemon</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">集成步骤\n\t1,在package.json中修改script脚本\n\t\t&#39;dev&#39;:&#39;要执行文件的路径&#39;\n\t2,使用npm run dev 执行代码\n\t\t</code></pre>\n\n\n\n<h4 id=\"用户管理系统搭建\"><a href=\"#用户管理系统搭建\" class=\"headerlink\" title=\"用户管理系统搭建\"></a>用户管理系统搭建</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">1,分析具体需求\n2,设计数据库,建表(用之前的学生表即可)\n3,设计接口\n\t前台:发送请求的url,需要的参数\n\t后台:返回数据的格式\n4,编写代码\n\t1,先写后端\n\t\texpress脚手架快速生成\n\t\t   1,全局安装脚手架 npm i express-generator -g\n\t\t   2,创建项目文件夹,在这个文件夹内使用express --no-view backEnd生成后端目录\n\t\t   3,进入后端backEnd目录内,使用npm install安装package.json配置的相关依赖(包)\n\t\t   4,继续使用命令npm i nodemon -D 安装nodemon包,\n\t\t   5,修改启动脚本(&quot;start&quot;: &quot;nodemon .&#x2F;bin&#x2F;www&quot;)\n\t\t   6,继续使用命令安装mysql和cors包,安装好之后就可以在package.json看到配置\n\t\t   7,在终端使用npm run start运行,在浏览器输入http:&#x2F;&#x2F;localhost:3000&#x2F;访问欢迎页\n\t\t   \n\t\t   8,导入数据库操作的模块 \n\t\t   \t \t将之前写好的db文件夹直接拷贝到backEnd文件夹下\n\t\t   \t \t在routes文件夹下的users.js文件中导入数据库操作模块\n\t\t   \t \t\tconst &#123;getAll,getById,exec&#125; &#x3D; require(&#39;..&#x2F;db&#39;);\n\t\t   \t \t\t\n\t\t   9,导入跨域请求的模块\n\t\t   \t\t在app.js中导入 const cors &#x3D; require(&#39;cors&#39;);\n\t\t   \t\t在app.js中注册 app.use(cors())  注册路由之前注册</code></pre>\n\n\n\n<h4 id=\"后端编写流程\"><a href=\"#后端编写流程\" class=\"headerlink\" title=\"后端编写流程\"></a>后端编写流程</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">1,在用户路由模块users.js下编写代码\n2,编写获取所有用户,使用get请求,调用getAll()方法,返回所有用户的数组(data)\n3,编写获取一个用户,使用get请求,调用getById()方法,返回指定id的用户(data)\n4,编写新增一个用户,使用post请求,调用exec()方法,返回新增的用户(data.insertId)\n5,编写修改一个用户,使用put请求,调用exec()方法,返回新增的用户(无需data)\n5,编写删除一个用户,使用delete请求,调用exec()方法,设置状态码,返回空字符串(无需data)</code></pre>\n\n\n\n<h4 id=\"前端编写流程\"><a href=\"#前端编写流程\" class=\"headerlink\" title=\"前端编写流程\"></a>前端编写流程</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">一,显示所有用户\n\t1,新建fontEnd文件夹\n\t2,新建3个html页面\n\t3,编写list.html页面的骨架\n\t4,编写基本样式base.css\n\t5,编写list页面样式style.css\n\t6,引入jquery,发送ajax请求(已经引入了cors处理跨域请求)\n\t7,遍历获取到的数据,动态拼接tr元素,追加到table下面</code></pre>\n\n","text":"昨日回顾改造了express后台的增删改查 一,使用数组实现 弊端 数据不能持久存储,只是在内存中存储 二,中间件优化 1,优化处理请求体 app.use(express.json()) app.use(express.urlencoded()) 2,处理跨域请求 app.use...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"服务端","slug":"服务端","count":17,"path":"api/categories/服务端.json"}],"tags":[{"name":"express","slug":"express","count":6,"path":"api/tags/express.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%98%A8%E6%97%A5%E5%9B%9E%E9%A1%BE\"><span class=\"toc-text\">昨日回顾</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#express%E9%9B%86%E6%88%90nodemon\"><span class=\"toc-text\">express集成nodemon</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">用户管理系统搭建</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%90%8E%E7%AB%AF%E7%BC%96%E5%86%99%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">后端编写流程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF%E7%BC%96%E5%86%99%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">前端编写流程</span></a></li></ol>","author":{"name":"团子","slug":"blog-author","avatar":"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/QQ%E5%9B%BE%E7%89%8720221205215218.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"31_用户管理系统前端增删改完成","uid":"106826aea6b9ab5ab35ab7da587e641c","slug":"day31_课堂笔记","date":"2022-12-01T14:14:07.773Z","updated":"2022-12-02T06:07:35.600Z","comments":true,"path":"api/articles/day31_课堂笔记.json","keywords":null,"cover":null,"text":"昨日回顾1,将数据库操作的代码命名为index.js,放在db文件夹下.方便管理 2,脚手架的使用及项目环境搭建(项目代码生成器) 安装 创建项目名,express --no-view backEnd 生成后端目录 安装包(自带的包,mysql cors,nodemon) 更改启...","link":"","photos":[],"count_time":{"symbolsCount":870,"symbolsTime":"1 mins."},"categories":[{"name":"服务端","slug":"服务端","count":17,"path":"api/categories/服务端.json"}],"tags":[{"name":"express","slug":"express","count":6,"path":"api/tags/express.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/QQ%E5%9B%BE%E7%89%8720221205215218.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}},"next_post":{"title":"29_express集成数据库操作并封装","uid":"841af1c8d1a60dd62055f0a0655c6017","slug":"day29_课堂笔记","date":"2022-12-01T14:04:33.270Z","updated":"2022-12-02T06:07:42.527Z","comments":true,"path":"api/articles/day29_课堂笔记.json","keywords":null,"cover":null,"text":"昨日回顾中间件 概念 业务处理中间环节.(一个处理函数) 规则 (req,res,next) next可以将调用关系流转到下一个函数 分类 按照作用范围 局部生效的中间件(某些访问路径,某个路由调用) 全局生效的中间件(所有访问路径,通过use调用) 按照级别来分 内置中间件 e...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"服务端","slug":"服务端","count":17,"path":"api/categories/服务端.json"}],"tags":[{"name":"express","slug":"express","count":6,"path":"api/tags/express.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/QQ%E5%9B%BE%E7%89%8720221205215218.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}}}