{"title":"六. Vuex","uid":"2c2fb0d64b64f05eef1b605a8211929d","slug":"六. Vuex_new","date":"2022-12-02T12:06:41.322Z","updated":"2022-12-02T12:06:41.323Z","comments":true,"path":"api/articles/六. Vuex_new.json","keywords":null,"cover":[],"content":"<p><a name=\"75c0327d\"></a></p>\n<h1 id=\"一-概述\"><a href=\"#一-概述\" class=\"headerlink\" title=\"一. 概述\"></a>一. 概述</h1><p><a name=\"b5756677\"></a></p>\n<h2 id=\"1-Vuex是什么\"><a href=\"#1-Vuex是什么\" class=\"headerlink\" title=\"1 Vuex是什么\"></a>1 Vuex是什么</h2><p>Vuex是一个集中式的状态管理<strong>插件</strong>, 实现<strong>所有组件</strong>的状态(数据)<strong>共享</strong>, 也是<strong>组件间通信</strong>的一种方式</p>\n<ol>\n<li>Vuex本质上是一个Vue的插件</li>\n<li>主要实现所有组件的状态共享</li>\n</ol>\n<p><a name=\"b006063f\"></a></p>\n<h2 id=\"2-什么时候用Vuex\"><a href=\"#2-什么时候用Vuex\" class=\"headerlink\" title=\"2 什么时候用Vuex\"></a>2 什么时候用Vuex</h2><p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/image-20220118143421352.png\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>一句话总结</p></blockquote>\n<p>官方推荐在<strong>中大型单页</strong>应用中使用</p>\n<p>如何界定呢? 这里给出我自己的经验(仅供参考)</p>\n<ol>\n<li>需要与第三方的系统深度整合, 涉及异步获取数据, 大量使用全局变量, 业务逻辑比较复杂等情况时</li>\n<li>如果超过3个组件需要<code>引用/修改</code>同一个数据结构, 比如token, 用户收藏, 购物车中的商品</li>\n<li>涉及到深层嵌套的组件需要与其它组件进行数据通讯</li>\n</ol>\n<p><a name=\"a980c86f\"></a></p>\n<h1 id=\"二-Vuex的工作原理\"><a href=\"#二-Vuex的工作原理\" class=\"headerlink\" title=\"二. Vuex的工作原理\"></a>二. Vuex的工作原理</h1><p><a name=\"45b04795\"></a></p>\n<h2 id=\"1-设计思路\"><a href=\"#1-设计思路\" class=\"headerlink\" title=\"1 设计思路\"></a>1 设计思路</h2><p>Vuex可以理解成一个统一管理数据的仓库, 因此通常使用<code>store</code>表示<br />理论上, 所有的组件都可以操作(读写)store中的数据</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>怎样实现读数据</p></blockquote>\n<p>可以定义一个单独的<strong>全局变量</strong>, 所有的组件从全局对象中获取数据</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>怎样实现写数据</p></blockquote>\n<p>如果在每个组件中各自修改<strong>全局变量</strong>, 就会引起混乱, 因此设计一个工具集中的管理写操作</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如何设计集中式的写操作</p></blockquote>\n<p>所有的组件不能自己修改<strong>全局变量</strong>, 需要通知Vuex, 由Vuex集中管理, 统一修改</p>\n<p>OK, 这样Vuex里至少应该包含两个部分</p>\n<ul>\n<li>state: 保存全局数据</li>\n<li>actions: 对数据进行修改的动作</li>\n</ul>\n<p>因此, 对于简单的状态管理, 我们使用类似于下面的<br><a href=\"https://cn.vuejs.org/v2/guide/state-management.html#%E7%AE%80%E5%8D%95%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86%E8%B5%B7%E6%AD%A5%E4%BD%BF%E7%94%A8\">store模式</a>就可以<br /><br><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/state.png\"></p>\n<p>Vuex在设计时, 将<code>动作</code>拆分成了两个部分</p>\n<ul>\n<li>Actions: 处理业务逻辑和异步任务</li>\n<li>Mutations: 对状态的修改</li>\n</ul>\n<p><a name=\"9609d276\"></a></p>\n<h2 id=\"2-核心概念\"><a href=\"#2-核心概念\" class=\"headerlink\" title=\"2 核心概念\"></a>2 核心概念</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>图示</p></blockquote>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1666684489962-31ec7763-c4e9-4c11-a265-722772f85887.png\" alt=\"image.png\"></p>\n<p><a name=\"706661bb\"></a></p>\n<h3 id=\"1-Actions\"><a href=\"#1-Actions\" class=\"headerlink\" title=\"1) Actions\"></a>1) Actions</h3><p>动作, 行为</p>\n<p><a name=\"c87e015a\"></a></p>\n<h3 id=\"2-Mutations\"><a href=\"#2-Mutations\" class=\"headerlink\" title=\"2) Mutations\"></a>2) Mutations</h3><p>变化, 转变</p>\n<p><a name=\"cc93a6e8\"></a></p>\n<h3 id=\"3-State\"><a href=\"#3-State\" class=\"headerlink\" title=\"3) State\"></a>3) State</h3><p>状态, 数据</p>\n<p><a name=\"6f168691\"></a></p>\n<h1 id=\"三-起步\"><a href=\"#三-起步\" class=\"headerlink\" title=\"三. 起步\"></a>三. 起步</h1><p><a name=\"f694bcb0\"></a></p>\n<h2 id=\"1-创建vue项目\"><a href=\"#1-创建vue项目\" class=\"headerlink\" title=\"1 创建vue项目\"></a>1 创建vue项目</h2><p>使用vue脚本创建项目<code>vuex-demo</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vue create vuex-demo</code></pre>\n\n<p>编写一个<code>基本的计数器</code>组件</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;点击了&#123;&#123; count &#125;&#125;次&lt;&#x2F;h1&gt;\n    &lt;button @click&#x3D;&quot;increment&quot;&gt;+1&lt;&#x2F;button&gt;\n    &lt;button @click&#x3D;&quot;decrement&quot;&gt;-1&lt;&#x2F;button&gt;\n    &lt;button @click&#x3D;&quot;incrementIfOdd&quot;&gt;是奇数就+1&lt;&#x2F;button&gt;\n    &lt;button @click&#x3D;&quot;incrementAsync&quot;&gt;异步+1&lt;&#x2F;button&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nexport default &#123;\n  name: &#39;Counter&#39;,\n  data() &#123;\n    return &#123;\n      count: 0,\n    &#125;\n  &#125;,\n  methods: &#123;\n    increment() &#123;\n      this.count++\n    &#125;,\n    decrement() &#123;\n      this.count--\n    &#125;,\n    incrementIfOdd() &#123;\n      if (this.count % 2) this.count++\n    &#125;,\n    incrementAsync() &#123;\n      setTimeout(() &#x3D;&gt; &#123;\n        this.count++\n      &#125;, 500)\n    &#125;,\n  &#125;,\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<p>挂载到App.vue下</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;template&gt;\n  &lt;div id&#x3D;&quot;app&quot;&gt;\n    &lt;counter&gt;&lt;&#x2F;counter&gt;\n  &lt;&#x2F;div&gt;\n&lt;&#x2F;template&gt;\n\n&lt;script&gt;\nimport Counter from &#39;@&#x2F;components&#x2F;Counter.vue&#39;\n\nexport default &#123;\n  name: &#39;App&#39;,\n  components: &#123;\n    Counter,\n  &#125;,\n&#125;\n&lt;&#x2F;script&gt;</code></pre>\n\n<p><a name=\"f2dd0945\"></a></p>\n<h2 id=\"2-安装Vuex插件\"><a href=\"#2-安装Vuex插件\" class=\"headerlink\" title=\"2 安装Vuex插件\"></a>2 安装Vuex插件</h2><p>使用npm安装Vuex</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">npm i vuex@3</code></pre>\n<p>:::tips<br><strong>特别说明</strong></p>\n<ul>\n<li>3.x的版本: 是vue2的语法</li>\n<li>4.x的版本: 是vue3的语法</li>\n<li>5.x的版本: pinia是下一代的vuex, 状态管理<br>:::<br><a name=\"69080fbb\"></a><h2 id=\"3-配置\"><a href=\"#3-配置\" class=\"headerlink\" title=\"3 配置\"></a>3 配置</h2></li>\n</ul>\n<p>一般在<code>src</code>目录下创建<code>store/index.js</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 导入Vue\nimport Vue from &#39;vue&#39;\n&#x2F;&#x2F; 导入vuex\nimport Vuex from &#39;vuex&#39;\n\n&#x2F;&#x2F; vuex本质上是vue的一个插件, 通过Vue.use()注册\n&#x2F;&#x2F; 上所有的vue实例上挂载$store\nVue.use(Vuex)\n\n&#x2F;&#x2F; state: 状态\nconst state &#x3D; &#123;&#125;\n&#x2F;&#x2F; mutations: 修改状态\nconst mutations &#x3D; &#123;&#125;\n&#x2F;&#x2F; actions: 动作\nconst actions &#x3D; &#123;&#125;\n\n&#x2F;&#x2F; 创建并导出store对象\nexport default new Vuex.Store(&#123;\n  state,\n  mutations,\n  actions,\n&#125;)</code></pre>\n<p>Store包含三个部分</p>\n<ul>\n<li>state: 对象类型, 保存数据</li>\n<li>mutations: 对象类型, 定义方法操作数据</li>\n<li>actions: 对象类型, 处理逻辑和异步操作</li>\n</ul>\n<p><a name=\"PY75P\"></a></p>\n<h2 id=\"4-导入\"><a href=\"#4-导入\" class=\"headerlink\" title=\"4 导入\"></a>4 导入</h2><p>在<code>main.js</code>中, 完成<code>store</code>对象的导入</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import Vue from &#39;vue&#39;\nimport App from &#39;.&#x2F;App.vue&#39;\n\nimport store from &#39;.&#x2F;store&#39;\n\nVue.config.productionTip &#x3D; false\n\nnew Vue(&#123;\n  store, &#x2F;&#x2F; store: store\n  render: (h) &#x3D;&gt; h(App),\n&#125;).$mount(&#39;#app&#39;)</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>演示</p></blockquote>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/1650349055022-a424bb90-1ac9-42f1-a4b4-6e581977e743.png\" alt=\"image.png\"><br><a name=\"b7d7004c\"></a></p>\n<h1 id=\"四-基本使用\"><a href=\"#四-基本使用\" class=\"headerlink\" title=\"四. 基本使用\"></a>四. 基本使用</h1><p>为了熟悉Vuex的使用流程, 先了解单组件与Vuex如何交互<br />通过单组件熟悉语法和流程, 多组件使用也是类似的<br><a name=\"e3fe6186\"></a></p>\n<h2 id=\"1-完整流程\"><a href=\"#1-完整流程\" class=\"headerlink\" title=\"1 完整流程\"></a>1 完整流程</h2><p>完整流程分为两条线</p>\n<ol>\n<li>组件到Vuex, 主要是<code>写</code>操作, 通过向Vuex发送通知, 让Vuex修改state中的数据</li>\n<li>Vuex到组件, 主要是<code>读</code>操作, 从Vuex中读取状态<br><a name=\"90a85505\"></a><h3 id=\"1-流程图\"><a href=\"#1-流程图\" class=\"headerlink\" title=\"1) 流程图\"></a>1) 流程图</h3></li>\n</ol>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/%25E7%25BB%2584%25E4%25BB%25B6%25E5%2588%25B0Vuex%25E6%25B5%2581%25E7%25A8%258B.png\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关键API</p></blockquote>\n<ul>\n<li>dispatch(分发, 派发): 从组件分发到Actions对象的一个方法</li>\n<li>commit(提交): 提交一个Mutations对象的一个方法</li>\n</ul>\n<p><a name=\"d461252c\"></a></p>\n<h3 id=\"2-从组件到Actions\"><a href=\"#2-从组件到Actions\" class=\"headerlink\" title=\"2) 从组件到Actions\"></a>2) 从组件到Actions</h3><p>dispatch的两个参数</p>\n<ul>\n<li>type: 对应action函数的名称</li>\n<li>payload(可选): 携带的数据</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">increment() &#123;\n  &#x2F;&#x2F; 分发一个action, 对应调用名为increment的方法\n  this.$store.dispatch(&#39;increment&#39;)\n&#125;,</code></pre>\n\n<p>发现报错</p>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/image-20220120163143577.png\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>原因</p></blockquote>\n<p>在<code>actions</code>对象中, 并没有定义对应的<code>increment</code>方法</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>解决方法</p></blockquote>\n<p>在<code>actions</code>对象中定义<code>increment</code>方法<br />在<code>increment</code>方法中需要调用<code>commit</code>, 提交一个<code>mutation</code>, 所以这里设计了一个<code>context</code>参数保留了<code>store</code>大部分的方法, 但是出于性能考虑, 不太需要完整的<code>store</code>对象, 大家可以理解成一个<strong>简化版的store</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">increment(ctx, value) &#123;\n  console.log(ctx)\n&#125;,</code></pre>\n<p>通过观察, 我们发现这里也是可以拿到<code>state</code>的</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>思考</p></blockquote>\n<p>能否直接在<code>actions</code>方法中修改<code>state</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">increment(ctx, value) &#123;\n  console.log(ctx)\n  ctx.state.count +&#x3D; value\n&#125;,</code></pre>\n<p>理论上是可以的, 但是不推荐这么做, 原因后面细讲<br />在<code>actions</code>里, 最核心的工作是commit到Mutations</p>\n<p><a name=\"b8a56d99\"></a></p>\n<h3 id=\"3-从Actions到Mutations\"><a href=\"#3-从Actions到Mutations\" class=\"headerlink\" title=\"3) 从Actions到Mutations\"></a>3) 从Actions到Mutations</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">increment(ctx, value) &#123;\n  ctx.commit(&#39;INCRMENT&#39;, value)\n&#125;,</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>小技巧</p></blockquote>\n<p>为了区分<code>actions</code>和<code>mutations</code>, 一般将<code>mutations</code>的名称大写<br />此时, 发现没有定义相关的<code>mutation</code></p>\n<p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/image-20220120164209578.png\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>解决</p></blockquote>\n<p>定义对应的<code>mutations</code>, 在方法中可以拿到<code>state</code>, 进而对<code>state</code>进行操作</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">INCREMENT(state, value) &#123;\n  console.log(state)\n  state.count +&#x3D; value\n&#125;,</code></pre>\n\n<p><a name=\"Grnay\"></a></p>\n<h3 id=\"4-练习\"><a href=\"#4-练习\" class=\"headerlink\" title=\"4) 练习\"></a>4) 练习</h3><ul>\n<li>完成<code>decrement</code>流程</li>\n<li>完成<code>incrementIfOdd</code>流程</li>\n<li>完成<code>incrementAsync</code>流程</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>参考答案</p></blockquote>\n<p>组件的改造<br />在组件中通过调用<code>dispatch</code>分发<code>actions</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">methods: &#123;\n  increment() &#123;\n    &#x2F;&#x2F; 分发一个action, 对应调用名为increment的方法\n    this.$store.dispatch(&#39;increment&#39;, this.num)\n  &#125;,\n  decrement() &#123;\n    this.$store.dispatch(&#39;decrement&#39;, this.num)\n  &#125;,\n  incrementIfOdd() &#123;\n  \tthis.$store.dispatch(&#39;incrementIfOdd&#39;, this.num)\n  &#125;,\n  incrementAsync() &#123;\n  \tthis.$store.dispatch(&#39;incrementAsync&#39;, this.num)\n  &#125;,\n&#125;,</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Actions</p></blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const actions &#x3D; &#123;\n  increment(ctx, value) &#123;\n    ctx.commit(&#39;INCREMENT&#39;, value)\n  &#125;,\n  decrement(ctx, value) &#123;\n    ctx.commit(&#39;DECREMENT&#39;, value)\n  &#125;,\n  incrementIfOdd(ctx, value) &#123;\n    if (ctx.state.count % 2) ctx.commit(&#39;INCREMENTIFODD&#39;, value)\n  &#125;,\n  incrementAsync(ctx, value) &#123;\n    setTimeout(() &#x3D;&gt; &#123;\n      ctx.commit(&#39;INCREMENTASYNC&#39;, value)\n    &#125;, 500)\n  &#125;,\n&#125;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Mutations</p></blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const mutations &#x3D; &#123;\n  INCREMENT(state, value) &#123;\n    console.log(state)\n    state.count +&#x3D; value\n  &#125;,\n  DECREMENT(state, value) &#123;\n    state.count -&#x3D; value\n  &#125;,\n  INCREMENTIFODD(state, value) &#123;\n    state.count +&#x3D; value\n  &#125;,\n  INCREMENTASYNC(state, value) &#123;\n    state.count +&#x3D; value\n  &#125;,\n&#125;</code></pre>\n\n<p><a name=\"af07c4c8\"></a></p>\n<h3 id=\"5-从Vuex到组件\"><a href=\"#5-从Vuex到组件\" class=\"headerlink\" title=\"5) 从Vuex到组件\"></a>5) 从Vuex到组件</h3><p>所有的组件对象都可以通过<code>$store</code>访问到Vuex, 进而可以拿到<code>state</code><br />在组件中使用</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;h1&gt;计数总和: &#123;&#123; $store.state.count &#125;&#125;&lt;&#x2F;h1&gt;</code></pre>\n\n<p><a name=\"94dfb785\"></a></p>\n<h2 id=\"2-简化流程\"><a href=\"#2-简化流程\" class=\"headerlink\" title=\"2 简化流程\"></a>2 简化流程</h2><p>我们发现向<code>increment</code>和<code>decrement</code>这样的操作在<code>actions</code>没做什么逻辑操作, 直接转发给Mutations<br />所以, 我们思考是否可以跳过这个流程, 让组件直接commit到Mutations呢?<br />答案是肯定的, Vuex团队也注意到了这个问题</p>\n<p><a name=\"90a85505-1\"></a></p>\n<h3 id=\"1-流程图-1\"><a href=\"#1-流程图-1\" class=\"headerlink\" title=\"1) 流程图\"></a>1) 流程图</h3><p><img src=\"https://blog4xk-1309331490.cos.ap-nanjing.myqcloud.com/markdown/%25E7%25BB%2584%25E4%25BB%25B6%25E5%2588%25B0Vuex%25E7%25AE%2580%25E5%258C%2596%25E6%25B5%2581%25E7%25A8%258B.png\"></p>\n<p><a name=\"acb04f39\"></a></p>\n<h3 id=\"2-从组件直接到Mutations\"><a href=\"#2-从组件直接到Mutations\" class=\"headerlink\" title=\"2) 从组件直接到Mutations\"></a>2) 从组件直接到Mutations</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>示例</p></blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">methods: &#123;\n  increment() &#123;\n    &#x2F;&#x2F; 分发一个action, 对应调用名为increment的方法\n    &#x2F;&#x2F; this.$store.dispatch(&#39;increment&#39;, this.num)\n    &#x2F;&#x2F; 直接使用commit提交给Mutations\n    this.$store.commit(&#39;INCREMENT&#39;, this.num)\n  &#125;,\n  decrement() &#123;\n    &#x2F;&#x2F; this.$store.dispatch(&#39;decrement&#39;, this.num)\n    &#x2F;&#x2F; 直接使用commit提交给Mutations\n    this.$store.commit(&#39;DECREMENT&#39;, this.num)\n  &#125;,\n&#125;,</code></pre>\n<p><a name=\"0014ede3\"></a></p>\n<h2 id=\"3-深入思考\"><a href=\"#3-深入思考\" class=\"headerlink\" title=\"3 深入思考\"></a>3 深入思考</h2><p><a name=\"1f6e6355\"></a></p>\n<h3 id=\"1-为什么将Actions和Mutations分开\"><a href=\"#1-为什么将Actions和Mutations分开\" class=\"headerlink\" title=\"1) 为什么将Actions和Mutations分开\"></a>1) 为什么将Actions和Mutations分开</h3><p>Vuex设计的目的就是为中大型项目服务的</p>\n<ol>\n<li>Actions属于分层设计, 将复杂业务解耦, 承担了类似<code>中间件</code>的角色</li>\n<li>Actions处理异步任务, Mutations处理同步任务</li>\n<li>Mutations方便调试与监控, 能更好地与<code>devtools</code>集成</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>案例</p></blockquote>\n<p>在组件中, 分发一个<code>complex</code>任务到Actions</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;button @click&#x3D;&quot;$store.dispatch(&#39;complex&#39;)&quot;&gt;复杂的逻辑&lt;&#x2F;button&gt;</code></pre>\n\n<p>在Actions中, 拆分成多个子任务, 完成解耦</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">complex(ctx) &#123;\n  console.log(&#39;处理复杂逻辑...&#39;)\n  ctx.dispatch(&#39;sub1&#39;)\n&#125;,\nsub1(ctx) &#123;\n  console.log(&#39;处理子任务1...&#39;)\n  ctx.dispatch(&#39;sub2&#39;)\n&#125;,\nsub2(ctx) &#123;\n  console.log(&#39;处理子任务2...&#39;)\n  ctx.commit(&#39;INCREMENT&#39;, 1)\n&#125;,</code></pre>\n<p>子任务可以设计成异步任务, 从而提高效率, 而真正对数据的修改统一放到Mutations中完成</p>\n<p><a name=\"d993a13f\"></a></p>\n<h3 id=\"2-Vuex调试工具\"><a href=\"#2-Vuex调试工具\" class=\"headerlink\" title=\"2) Vuex调试工具\"></a>2) Vuex调试工具</h3><p>由于所有的数据修改统一在Mutations中完成, 只需要监控Mutations就可以完全控制state的改变, 方便大型项目中的调试, 这也是为什么不推荐在Actions中直接修改state的原因<br><a name=\"06a8ae80\"></a></p>\n<h2 id=\"4-Getters配置\"><a href=\"#4-Getters配置\" class=\"headerlink\" title=\"4 Getters配置\"></a>4 Getters配置</h2><p><strong>Vuex中的Getters类似于计算属性</strong>, 用于对数据的再次加工<br>:::warning<br><strong>需求</strong><br />统计已完成的todo项目<br>:::<br><a name=\"654149ec\"></a></p>\n<h3 id=\"1-定义state\"><a href=\"#1-定义state\" class=\"headerlink\" title=\"1) 定义state\"></a>1) 定义state</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const state &#x3D; &#123;\n  count: 0,\n  todos: [\n    &#123; id: 1, content: &#39;待办1&#39;, done: true &#125;,\n    &#123; id: 2, content: &#39;待办2&#39;, done: false &#125;,\n    &#123; id: 3, content: &#39;待办3&#39;, done: false &#125;,\n  ],\n&#125;</code></pre>\n\n<p><a name=\"37fe2672\"></a></p>\n<h3 id=\"2-定义getters\"><a href=\"#2-定义getters\" class=\"headerlink\" title=\"2) 定义getters\"></a>2) 定义getters</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const getters &#x3D; &#123;\n  doneTodos: (state) &#x3D;&gt; &#123;\n    return state.todos.filter((todo) &#x3D;&gt; todo.done)\n  &#125;,\n&#125;</code></pre>\n\n<p><a name=\"62f492cd\"></a></p>\n<h3 id=\"3-配置getters\"><a href=\"#3-配置getters\" class=\"headerlink\" title=\"3) 配置getters\"></a>3) 配置getters</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 创建并导出store对象\nexport default new Vuex.Store(&#123;\n  state,\n  mutations,\n  actions,\n  getters,\n&#125;)</code></pre>\n\n<p><a name=\"d214d1c8\"></a></p>\n<h3 id=\"4-在组件中调用\"><a href=\"#4-在组件中调用\" class=\"headerlink\" title=\"4) 在组件中调用\"></a>4) 在组件中调用</h3><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;h3&gt;已完成的待办&lt;&#x2F;h3&gt;\n&lt;ul&gt;\n  &lt;li v-for&#x3D;&quot;item in $store.getters.doneTodos&quot; :key&#x3D;&quot;item.id&quot;&gt;\n    &#123;&#123; item.content &#125;&#125;\n  &lt;&#x2F;li&gt;\n&lt;&#x2F;ul&gt;</code></pre>\n\n<p><a name=\"d1cfce60\"></a></p>\n<h3 id=\"5-其它用法\"><a href=\"#5-其它用法\" class=\"headerlink\" title=\"5) 其它用法\"></a>5) 其它用法</h3><p>通过方法访问, 返回一个函数</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;div&gt;id为2的todo: &#123;&#123; $store.getters.getTodoById(2) &#125;&#125;&lt;&#x2F;div&gt;</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const getters &#x3D; &#123;\n  doneTodos: (state) &#x3D;&gt; &#123;\n    return state.todos.filter((todo) &#x3D;&gt; todo.done)\n  &#125;,\n  getTodoById: (state) &#x3D;&gt; &#123;\n    return (id) &#x3D;&gt; &#123;\n      return state.todos.find((todo) &#x3D;&gt; todo.id &#x3D;&#x3D; id)\n    &#125;\n  &#125;,\n&#125;</code></pre>\n\n<p><a name=\"21e859f5\"></a></p>\n<h1 id=\"五-map辅助函数\"><a href=\"#五-map辅助函数\" class=\"headerlink\" title=\"五. map辅助函数\"></a>五. map辅助函数</h1><p><a name=\"92d7131b\"></a></p>\n<h2 id=\"1-为什么需要辅助函数\"><a href=\"#1-为什么需要辅助函数\" class=\"headerlink\" title=\"1 为什么需要辅助函数\"></a>1 为什么需要辅助函数</h2><p>在组件中访问state状态时, 每次都需要使用</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$store.state.xxx</code></pre>\n<p>我们希望在使用的时候直接使用<code>xxx</code>该如何操作呢</p>\n<p>可以在组件中定义计算属性</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">computed: &#123;\n  count() &#123;\n  \treturn this.$store.state.count\n  &#125;,\n  name() &#123;\n  \treturn this.$store.state.name\n  &#125;,\n  age() &#123;\n  \treturn this.$store.state.age\n  &#125;,\n&#125;,</code></pre>\n<p>我们发现computed里的函数差不多, 能否使用一个统一的写法</p>\n<p>vuex团队也给提供了4个辅助函数</p>\n<ul>\n<li>mapState</li>\n<li>mapGetters</li>\n<li>mapMutations</li>\n<li>mapActions</li>\n</ul>\n<p><a name=\"85095316\"></a></p>\n<h2 id=\"2-mapState\"><a href=\"#2-mapState\" class=\"headerlink\" title=\"2 mapState\"></a>2 mapState</h2><p>先导入<code>mapState</code>等辅助函数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; mapState &#125; from &#39;vuex&#39;</code></pre>\n\n<p>返回<strong>一个对象</strong>, 包含了计算属性函数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">mounted() &#123;\n  &#x2F;&#x2F; 返回一个对象\n  console.log(mapState([&#39;count&#39;, &#39;name&#39;, &#39;age&#39;]))\n&#125;,</code></pre>\n\n<p>可以使用展开运算符<code>...</code>将对象展开, 和其他方法进行合并</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">computed: &#123;\n  &#x2F;&#x2F; 使用对象的展开\n  ...mapState([&#39;count&#39;, &#39;name&#39;, &#39;age&#39;]),\n  someOther() &#123;&#125;\n&#125;,</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>对象映射写法</p></blockquote>\n<p>如果希望计算属性名称和state状态名称不一致, 可以使用对象映射的写法</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; mapState(对象写法)\n...mapState(&#123; myCount: &#39;count&#39;, myName: &#39;name&#39;, myAge: &#39;age&#39; &#125;),</code></pre>\n\n<p><a name=\"3aebc9e1\"></a></p>\n<h2 id=\"3-mapGetters\"><a href=\"#3-mapGetters\" class=\"headerlink\" title=\"3 mapGetters\"></a>3 mapGetters</h2><p>同理, Vuex也提供了<code>mapGetters</code>辅助函数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; mapState, mapGetters &#125; from &#39;vuex&#39;</code></pre>\n\n<p>在computed中</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">computed: &#123;\n  ...mapGetters([&#39;doneTodos&#39;, &#39;getTodoById&#39;]),\n&#125;</code></pre>\n\n<p><a name=\"ee96ebc4\"></a></p>\n<h2 id=\"4-mapMutations\"><a href=\"#4-mapMutations\" class=\"headerlink\" title=\"4 mapMutations\"></a>4 mapMutations</h2><p>在methods中</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">...mapMutations(&#123; increment: &#39;INCREMENT&#39;, decrement: &#39;DECRMENT&#39; &#125;),</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意</p></blockquote>\n<p>这里如果要传参, 只能在调用函数时传递</p>\n<pre class=\"line-numbers language-vue\" data-language=\"vue\"><code class=\"language-vue\">&lt;button @click&#x3D;&quot;increment(num)&quot;&gt;+&lt;&#x2F;button&gt;\n&lt;button @click&#x3D;&quot;decrement(num)&quot;&gt;-&lt;&#x2F;button&gt;</code></pre>\n\n<p><a name=\"6f02cc50\"></a></p>\n<h2 id=\"5-mapActions\"><a href=\"#5-mapActions\" class=\"headerlink\" title=\"5 mapActions\"></a>5 mapActions</h2><p>在methods中</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">...mapActions([&#39;incrementIfOdd&#39;, &#39;incrementAsync&#39;, &#39;complex&#39;]),</code></pre>\n\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;button @click&#x3D;&quot;incrementIfOdd(1)&quot;&gt;是奇数就+1&lt;&#x2F;button&gt;\n&lt;button @click&#x3D;&quot;incrementAsync(1)&quot;&gt;异步+1&lt;&#x2F;button&gt;</code></pre>\n<p><a name=\"QMKfq\"></a></p>\n<h1 id=\"六-模块化\"><a href=\"#六-模块化\" class=\"headerlink\" title=\"六. 模块化\"></a>六. 模块化</h1><p><a name=\"kb9vC\"></a></p>\n<h2 id=\"1-为什么需要模块化\"><a href=\"#1-为什么需要模块化\" class=\"headerlink\" title=\"1 为什么需要模块化\"></a>1 为什么需要模块化</h2><p>当应用变得非常复杂时，<code>store</code>对象就有可能变得相当臃肿<br />如果集中写一个文件中, 不方便管理. 此时, 可以考虑拆分成多个模块<br><a name=\"aPr28\"></a></p>\n<h2 id=\"2-具体实现\"><a href=\"#2-具体实现\" class=\"headerlink\" title=\"2 具体实现\"></a>2 具体实现</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>示例</p></blockquote>\n<p>按照功能, 将<code>计数器</code>, <code>todos</code>拆分到不同的模块中</p>\n<p><a name=\"XjT3A\"></a></p>\n<h3 id=\"1-拆分计数器模块\"><a href=\"#1-拆分计数器模块\" class=\"headerlink\" title=\"1) 拆分计数器模块\"></a>1) 拆分计数器模块</h3><p>将<code>计数器</code>相关的功能写在<code>modules/counter.js</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 定义一个counter模块\nexport default &#123;\n  &#x2F;&#x2F; state: 保存状态(数据)\n  state: () &#x3D;&gt; &#123;\n    return &#123;\n      count: 0,\n    &#125;\n  &#125;,\n  &#x2F;&#x2F; 修改数据的方法(同步)\n  mutations: &#123;\n    INCREMENT(state, value) &#123;\n      state.count++\n    &#125;,\n    DECREMENT(state, value) &#123;\n      state.count--\n    &#125;,\n    INCREMENTIFODD(state, value) &#123;\n      state.count++\n    &#125;,\n    INCREMENTASYNC(state, value) &#123;\n      state.count++\n    &#125;,\n  &#125;,\n  &#x2F;&#x2F; 修改数据的方法(支持异步, 相当于中间件)\n  actions: &#123;\n    increment(ctx, value) &#123;\n      ctx.commit(&#39;INCREMENT&#39;)\n    &#125;,\n    decrement(ctx, value) &#123;\n      ctx.commit(&#39;DECREMENT&#39;)\n    &#125;,\n    incrementIfOdd(ctx, value) &#123;\n      if (ctx.state.count % 2) &#123;\n        ctx.commit(&#39;INCREMENTIFODD&#39;)\n      &#125;\n    &#125;,\n    incrementAsync(ctx, value) &#123;\n      setTimeout(() &#x3D;&gt; &#123;\n        ctx.commit(&#39;INCREMENTASYNC&#39;)\n      &#125;, 1000)\n    &#125;,\n  &#125;,\n&#125;\n</code></pre>\n<p><a name=\"EsGOE\"></a></p>\n<h3 id=\"2-拆分todos模块\"><a href=\"#2-拆分todos模块\" class=\"headerlink\" title=\"2) 拆分todos模块\"></a>2) 拆分todos模块</h3><p>将<code>todos</code>相关的功能, 写在<code>modules/todos.js</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 在这处理todos模块相关的状态\nexport default &#123;\n  state: () &#x3D;&gt; &#123;\n    return &#123;\n      todos: [\n        &#123; id: 1, content: &#39;待办1&#39;, done: true &#125;,\n        &#123; id: 2, content: &#39;待办2&#39;, done: false &#125;,\n        &#123; id: 3, content: &#39;待办3&#39;, done: false &#125;,\n      ],\n    &#125;\n  &#125;,\n  getters: &#123;\n    doneTodos: (state) &#x3D;&gt; &#123;\n      return state.todos.filter((item) &#x3D;&gt; item.done)\n    &#125;,\n    getTodoById: (state) &#x3D;&gt; &#123;\n      return (id) &#x3D;&gt; &#123;\n        return state.todos.find((item) &#x3D;&gt; item.id &#x3D;&#x3D; id)\n      &#125;\n    &#125;,\n  &#125;,\n&#125;\n</code></pre>\n<p>:::info<br><strong>注意</strong><br />模块化中的state是一个函数<br>:::<br><a name=\"A2Foi\"></a></p>\n<h3 id=\"3-导入模块\"><a href=\"#3-导入模块\" class=\"headerlink\" title=\"3) 导入模块\"></a>3) 导入模块</h3><p>在<code>store/index.js</code>中导入两个模块</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import Vue from &#39;vue&#39;\nimport Vuex from &#39;vuex&#39;\n\n&#x2F;&#x2F; 注册插件: 在Vue的原型对象上, 挂载了$store\nVue.use(Vuex)\n\nimport counter from &#39;.&#x2F;modules&#x2F;counter&#39;\nimport todos from &#39;.&#x2F;modules&#x2F;todos&#39;\nexport default new Vuex.Store(&#123;\n  modules: &#123;\n    counter,\n    todos,\n  &#125;,\n&#125;)</code></pre>\n<p><a name=\"WYrFh\"></a></p>\n<h3 id=\"4-在组件中使用\"><a href=\"#4-在组件中使用\" class=\"headerlink\" title=\"4) 在组件中使用\"></a>4) 在组件中使用</h3><p>在<code>App.vue</code>中使用</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">computed: &#123;\n  &#x2F;&#x2F; 对应state.module.xxx\n  ...mapState(&#123;mycount: state &#x3D;&gt; state.counter.count&#125;),\n  &#x2F;&#x2F; getters是挂在全局空间下, 可以直接使用\n  ...mapGetters([&#39;doneTodos&#39;, &#39;getTodoById&#39;])\n&#125;,\nmethods: &#123;\n  &#x2F;&#x2F; mutations和actions也是挂在全局空间下, 可以直接使用\n  ...mapMutations([&#39;INCREMENT&#39;, &#39;DECREMENT&#39;]),\n  ...mapActions([&#39;incrementIfOdd&#39;, &#39;incrementAsync&#39;])\n&#125;</code></pre>\n<p><a name=\"fIYUC\"></a></p>\n<h2 id=\"3-命名空间\"><a href=\"#3-命名空间\" class=\"headerlink\" title=\"3 命名空间\"></a>3 命名空间</h2><p><a name=\"iKuHd\"></a></p>\n<h3 id=\"1-为什么需要命名空间\"><a href=\"#1-为什么需要命名空间\" class=\"headerlink\" title=\"1) 为什么需要命名空间\"></a>1) 为什么需要命名空间</h3><p>默认情况下, 所有的<code>getters</code>, <code>mutations</code>, <code>actions</code>都是挂在store的全局空间下.<br /><strong>多个模块可能会存在同名的</strong><code>**action**</code><strong>, 为了更好的区分模块, 可以加上命名空间</strong><br><a name=\"RLWnr\"></a></p>\n<h3 id=\"2-使用\"><a href=\"#2-使用\" class=\"headerlink\" title=\"2) 使用\"></a>2) 使用</h3><p>在<code>App.vue</code>中的<code>mapGetters``mapMutations</code> <code>mapActions</code>中带上命名空间</p>\n<p>在模块中, 配置<code>namespaced: true</code>开启命名空间</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 定义一个counter的对象\nexport default &#123;\n  &#x2F;&#x2F; 开启命名空间\n  namespaced: true,\n  &#x2F;&#x2F; state: 在module模块中需要是一个函数\n  state: () &#x3D;&gt; &#123;\n    return &#123;\n      count: 0\n    &#125;\n  &#125;,\n  ....\n&#125;</code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">export default &#123;\n  namespaced: true,\n  state: () &#x3D;&gt; &#123;\n    return &#123;\n      todos: [\n        &#123;id:1, content: &#39;待办1&#39;, done: true&#125;,\n        &#123;id:2, content: &#39;待办2&#39;, done: false&#125;,\n        &#123;id:3, content: &#39;待办3&#39;, done: true&#125;,\n      ]\n    &#125;\n  &#125;,\n  ...\n&#125;</code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">computed: &#123;\n  ...mapGetters(&#39;todos&#39;,[&#39;doneTodos&#39;, &#39;getTodoById&#39;])\n&#125;,\nmethods: &#123;\n  ...mapMutations(&#39;counter&#39;, [&#39;INCREMENT&#39;, &#39;DECREMENT&#39;]),\n  ...mapActions(&#39;counter&#39;, [&#39;incrementIfOdd&#39;, &#39;incrementAsync&#39;])\n&#125;</code></pre>\n<p>或者使用带命名空间使用</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">incrementIfOdd() &#123;\n  this.$store.dispatch(&#39;counter&#x2F;incrementIfOdd&#39;)\n&#125;,\nincrementAsync() &#123;\n  this.$store.dispatch(&#39;counter&#x2F;incrementAsync&#39;)\n&#125;</code></pre>","text":" 一. 概述 1 Vuex是什么Vuex是一个集中式的状态管理插件, 实现所有组件的状态(数据)共享, 也是组件间通信的一种方式 Vuex本质上是一个Vue的插件 主要实现所有组件的状态共享 2 什么时候用Vuex 一句话总结 官方推荐在中大型单页应用中使用 如何界定呢? 这里给...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"Vue","slug":"Vue","count":16,"path":"api/categories/Vue.json"}],"tags":[{"name":"Vue2进阶","slug":"Vue2进阶","count":10,"path":"api/tags/Vue2进阶.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80-%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">一. 概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-Vuex%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">1 Vuex是什么</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E7%94%A8Vuex\"><span class=\"toc-text\">2 什么时候用Vuex</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C-Vuex%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">二. Vuex的工作原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E8%AE%BE%E8%AE%A1%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">1 设计思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">2 核心概念</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-Actions\"><span class=\"toc-text\">1) Actions</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Mutations\"><span class=\"toc-text\">2) Mutations</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-State\"><span class=\"toc-text\">3) State</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89-%E8%B5%B7%E6%AD%A5\"><span class=\"toc-text\">三. 起步</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%88%9B%E5%BB%BAvue%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">1 创建vue项目</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%AE%89%E8%A3%85Vuex%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">2 安装Vuex插件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">3 配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%AF%BC%E5%85%A5\"><span class=\"toc-text\">4 导入</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">四. 基本使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%AE%8C%E6%95%B4%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">1 完整流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%B5%81%E7%A8%8B%E5%9B%BE\"><span class=\"toc-text\">1) 流程图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%BB%8E%E7%BB%84%E4%BB%B6%E5%88%B0Actions\"><span class=\"toc-text\">2) 从组件到Actions</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E4%BB%8EActions%E5%88%B0Mutations\"><span class=\"toc-text\">3) 从Actions到Mutations</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E7%BB%83%E4%B9%A0\"><span class=\"toc-text\">4) 练习</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E4%BB%8EVuex%E5%88%B0%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">5) 从Vuex到组件</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E7%AE%80%E5%8C%96%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">2 简化流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%B5%81%E7%A8%8B%E5%9B%BE-1\"><span class=\"toc-text\">1) 流程图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%BB%8E%E7%BB%84%E4%BB%B6%E7%9B%B4%E6%8E%A5%E5%88%B0Mutations\"><span class=\"toc-text\">2) 从组件直接到Mutations</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E6%B7%B1%E5%85%A5%E6%80%9D%E8%80%83\"><span class=\"toc-text\">3 深入思考</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%B0%86Actions%E5%92%8CMutations%E5%88%86%E5%BC%80\"><span class=\"toc-text\">1) 为什么将Actions和Mutations分开</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-Vuex%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">2) Vuex调试工具</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-Getters%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">4 Getters配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%AE%9A%E4%B9%89state\"><span class=\"toc-text\">1) 定义state</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%AE%9A%E4%B9%89getters\"><span class=\"toc-text\">2) 定义getters</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E9%85%8D%E7%BD%AEgetters\"><span class=\"toc-text\">3) 配置getters</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%9C%A8%E7%BB%84%E4%BB%B6%E4%B8%AD%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">4) 在组件中调用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E5%85%B6%E5%AE%83%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">5) 其它用法</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%94-map%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">五. map辅助函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">1 为什么需要辅助函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-mapState\"><span class=\"toc-text\">2 mapState</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-mapGetters\"><span class=\"toc-text\">3 mapGetters</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-mapMutations\"><span class=\"toc-text\">4 mapMutations</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-mapActions\"><span class=\"toc-text\">5 mapActions</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%AD-%E6%A8%A1%E5%9D%97%E5%8C%96\"><span class=\"toc-text\">六. 模块化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E6%A8%A1%E5%9D%97%E5%8C%96\"><span class=\"toc-text\">1 为什么需要模块化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">2 具体实现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%8B%86%E5%88%86%E8%AE%A1%E6%95%B0%E5%99%A8%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">1) 拆分计数器模块</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%8B%86%E5%88%86todos%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">2) 拆分todos模块</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">3) 导入模块</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%9C%A8%E7%BB%84%E4%BB%B6%E4%B8%AD%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">4) 在组件中使用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4\"><span class=\"toc-text\">3 命名空间</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4\"><span class=\"toc-text\">1) 为什么需要命名空间</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">2) 使用</span></a></li></ol></li></ol></li></ol>","author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"扩展Vue组件间通信的各种方式","uid":"fed418f8bc6a1a6ecc0e727de5418b9a","slug":"补充Vue组件间通信的各种方式_new","date":"2022-12-02T13:23:47.095Z","updated":"2022-12-03T05:55:11.879Z","comments":true,"path":"api/articles/补充Vue组件间通信的各种方式_new.json","keywords":null,"cover":[],"text":" 1 父子组件通信 1) 父传子 在父组件模板中, 使用自定义属性 在子组件对象中, 使用props接收 2) 子传父 在子组件中, 使用$emit触发自定义事件 在父组件中, 监听自定义事件 2 亲兄弟组件通信 1) 介绍有共同父组件的兄弟叫做亲兄弟:::warning 需求老...","link":"","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[{"name":"补充","slug":"补充","count":3,"path":"api/categories/补充.json"}],"tags":[{"name":"Vue组件","slug":"Vue组件","count":1,"path":"api/tags/Vue组件.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}},"next_post":{"title":"实战TabBar封装","uid":"64fa4b6dd0d0c25575260215905ecca7","slug":"实战TabBar封装_new","date":"2022-12-02T11:52:41.705Z","updated":"2022-12-02T11:52:41.706Z","comments":true,"path":"api/articles/实战TabBar封装_new.json","keywords":null,"cover":[],"text":" 一. 搭建环境 1 创建项目使用vue-cli创建项目 vue create tabbar 2 启动项目使用VSCode打开tabbar文件夹在VSCode的终端中, 执行如下命令 npm run serve 演示 在浏览器中访问测试 3 清理项目 1) 清理App.vue清理...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"Vue","slug":"Vue","count":16,"path":"api/categories/Vue.json"}],"tags":[{"name":"Vue2进阶","slug":"Vue2进阶","count":10,"path":"api/tags/Vue2进阶.json"}],"author":{"name":"团子","slug":"blog-author","avatar":"https://www.helloimg.com/images/2022/12/01/Zu250T.jpg","link":"/","description":"处变不惊   安之若素","socials":{"github":"https://github.com/codbish","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/bguihiub","juejin":"","customs":{}}}}}